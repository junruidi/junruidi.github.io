labels = round(ylab),cex.axis = 2)
low_tmp = fpca.model$mu + -1*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + 1*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(min(a),(min(a)+max(a))/2,max(a))
yl = c(0, max(ylab))
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 2,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, lty = 1, lwd = 2, col = "red")
lines(low_tmp, lty = 1, lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
rm(list = ls())
load("~/Desktop/fpcaresult.rda")
sd_pcs = apply(sc,2,sd)
mu = fpca.model$mu
png("~/Dropbox/Junrui Di/Other papers/fpca mri/results/FPCA_impute_small_new0720_profile.png",width = 20,height = 20,units = "in",res = 300)
par(mfrow = c(5,2))
par(mar = c(5,6,4,4))
for(i in 1:10){
low_tmp = fpca.model$mu + -1*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + 1*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(min(a),(min(a)+max(a))/2,max(a))
yl = c(0, 500)
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 2,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, lty = 1, lwd = 2, col = "red")
lines(low_tmp, lty = 1, lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
}
dev.off()
?lowess
?loess
png("~/Dropbox/Junrui Di/Other papers/fpca mri/results/FPCA_impute_small_new0720_profile.png",width = 20,height = 20,units = "in",res = 300)
par(mfrow = c(5,2))
par(mar = c(5,6,4,4))
for(i in 1:10){
low_tmp = fpca.model$mu + -2*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + 2*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(0,200,400)
yl = c(0, 400)
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 2,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, lty = 1, lwd = 2, col = "red")
lines(low_tmp, lty = 1, lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
}
dev.off()
png("~/Dropbox/Junrui Di/Other papers/fpca mri/results/FPCA_impute_small_new0720_profile.png",width = 20,height = 20,units = "in",res = 300)
par(mfrow = c(5,2))
par(mar = c(5,6,4,4))
for(i in 1:10){
if(i %in% c(1:4)){
k = 1
} else{
k = 1
}
low_tmp = fpca.model$mu + -k*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + k*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(0,200,400)
yl = c(0, 400)
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 2,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, lty = 1, lwd = 2, col = "red")
lines(low_tmp, lty = 1, lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
}
dev.off()
png("~/Dropbox/Junrui Di/Other papers/fpca mri/results/FPCA_impute_small_new0720_profile.png",width = 20,height = 20,units = "in",res = 300)
par(mfrow = c(5,2))
par(mar = c(5,6,4,4))
for(i in 1:10){
if(i %in% c(1:4)){
k = 1
} else{
k = 2
}
low_tmp = fpca.model$mu + -k*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + k*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(0,200,400)
yl = c(0, 400)
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 2,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, lty = 1, lwd = 2, col = "red")
lines(low_tmp, lty = 1, lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
}
dev.off()
png("~/Dropbox/Junrui Di/Other papers/fpca mri/results/FPCA_impute_small_new0720_profile.png",width = 20,height = 20,units = "in",res = 300)
par(mfrow = c(5,2))
par(mar = c(5,6,4,4))
for(i in 1:10){
if(i %in% c(1:5)){
k = 1
} el{
k = 2
}
low_tmp = fpca.model$mu + -k*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + k*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(0,200,400)
yl = c(0, 400)
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 2,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, lty = 1, lwd = 2, col = "red")
lines(low_tmp, lty = 1, lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
}
dev.off()
png("~/Dropbox/Junrui Di/Other papers/fpca mri/results/FPCA_impute_small_new0720_profile.png",width = 20,height = 20,units = "in",res = 300)
par(mfrow = c(5,2))
par(mar = c(5,6,4,4))
for(i in 1:10){
if(i %in% c(1:5)){
k = 1
} else{
k = 2
}
low_tmp = fpca.model$mu + -k*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + k*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(0,200,400)
yl = c(0, 400)
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 2,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, lty = 1, lwd = 2, col = "red")
lines(low_tmp, lty = 1, lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
}
dev.off()
rm(list = ls())
load("~/Desktop/fpcaresult.rda")
sd_pcs = apply(sc,2,sd)
mu = fpca.model$mu
png("~/Dropbox/Junrui Di/Other papers/fpca mri/results/FPCA_impute_small_new0720_profile.png",width = 20,height = 20,units = "in",res = 300)
par(mfrow = c(5,2))
par(mar = c(5,6,4,4))
for(i in 1:10){
if(i %in% c(1:5)){
k = 1
} else{
k = 2
}
low_tmp = fpca.model$mu + -k*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + k*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(0,200,400)
yl = c(0, 400)
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 1,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, type = "p",pch = "+", lwd = 2, col = "red")
lines(low_tmp, type = "p",pch = "-", lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
}
dev.off()
plot(mu, type = "l")
s.mu = loess(mu~c(1:1440))
lines(s.mu)
plot(s.mu)
plot(s.mu$fitted)
rm(list = ls())
load("~/Desktop/fpcaresult.rda")
sd_pcs = apply(sc,2,sd)
mu = fpca.model$mu
png("~/Dropbox/Junrui Di/Other papers/fpca mri/results/FPCA_impute_small_new0720_profile.png",width = 20,height = 20,units = "in",res = 300)
par(mfrow = c(5,2))
par(mar = c(5,6,4,4))
for(i in 1:10){
if(i %in% c(1:5)){
k = 1
} else{
k = 2
}
low_tmp = fpca.model$mu + -k*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + k*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(0,200,400)
yl = c(0, 400)
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 1,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, type = "p",pch = "+", lwd = 2, col = "red")
lines(low_tmp, type = "p",pch = "-", lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
}
png("~/Dropbox/Junrui Di/Other papers/fpca mri/results/FPCA_impute_small_new0720_profile.png",width = 20,height = 20,units = "in",res = 300)
par(mfrow = c(5,2))
par(mar = c(5,6,4,4))
for(i in 1:10){
if(i %in% c(1:5)){
k = 1
} else{
k = 2
}
low_tmp = fpca.model$mu + -k*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + k*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(0,200,400)
yl = c(0, 400)
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 1,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, lty = 1 lwd = 2, col = "red")
lines(low_tmp, lty = 1 lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
}
dev.off()
rm(list = ls())
load("~/Desktop/fpcaresult.rda")
sd_pcs = apply(sc,2,sd)
mu = fpca.model$mu
png("~/Dropbox/Junrui Di/Other papers/fpca mri/results/FPCA_impute_small_new0720_profile.png",width = 20,height = 20,units = "in",res = 300)
par(mfrow = c(5,2))
par(mar = c(5,6,4,4))
for(i in 1:10){
if(i %in% c(1:5)){
k = 1
} else{
k = 2
}
low_tmp = fpca.model$mu + -k*sd_pcs[i]*Phi[,i]
high_tmp = fpca.model$mu + k*sd_pcs[i]*Phi[,i]
a = c(low_tmp,high_tmp,mu)
ylab = c(0,200,400)
yl = c(0, 400)
plot(mu, main =  paste("Principal Component",i,pve[i],sep = " "),
cex.main = 2.5,cex.lab = 2.2, ylim = yl, lty = 1,
type = "l",xaxt = "n",yaxt = "n",ylab = "AC", xlab = "Time")
lines(high_tmp, lty = 1, lwd = 2, col = "red")
lines(low_tmp, lty = 1, lwd = 2, col = "blue")
axis(1, at = c(seq(1,1440,240),1440),labels = t[seq(1,49,8)],cex.axis = 2)
axis(2, at = ylab,
labels = round(ylab),cex.axis = 2)
}
dev.off()
library(refund)
?fpca.face
xi <- matrix(rnorm(I*N),I,N);
xi <- xi\%*\%diag(sqrt(lambdaTrue))
X <- xi\%*\%t(phi); # of size I by J
Y <- X + sigma*matrix(rnorm(I*J),I,J)
results <- fpca.face(Y,center = TRUE, argvals=t,knots=100,pve=0.99)
###################################################
####               FACE                ########
###################################################
Phi <- results$efunctions
eigenvalues <- results$evalues
I <- 50 # number of subjects
J <- 3000 # dimension of the data
t <- (1:J)/J # a regular grid on [0,1]
N <- 4 #number of eigenfunctions
sigma <- 2 ##standard deviation of random noises
lambdaTrue <- c(1,0.5,0.5^2,0.5^3) # True eigenvalues
case = 1
### True Eigenfunctions
if(case==1) phi <- sqrt(2)*cbind(sin(2*pi*t),cos(2*pi*t),
sin(4*pi*t),cos(4*pi*t))
if(case==2) phi <- cbind(rep(1,J),sqrt(3)*(2*t-1),
sqrt(5)*(6*t^2-6*t+1),
sqrt(7)*(20*t^3-30*t^2+12*t-1))
###################################################
########     Generate Data            #############
###################################################
xi <- matrix(rnorm(I*N),I,N);
xi <- xi\%*\%diag(sqrt(lambdaTrue))
X <- xi\%*\%t(phi); # of size I by J
Y <- X + sigma*matrix(rnorm(I*J),I,J)
x = rnorm(n = 50, mean = 36, sd = 18)
x
fibR <- function(n) {
if (n == 0) return(0)
if (n == 1) return(1)
return (fibR(n - 1) + fibR(n - 2))
}
fibR(1)
fibR(2)
fibR(3)
fibR(4)
fibR(5)
library(actigraphy)
?plot_profile
data(example_activity_data)
count1 = c(t(example_activity_data$count[1,-c(1,2)]))
wear1 = c(t(example_activity_data$wear[1,-c(1,2)]))
plot_profile(x=count1, w=wear1, title = "Example")
data(example_activity_data)
count1 = c(t(example_activity_data$count[1,-c(1,2)]))
wear1 = c(t(example_activity_data$wear[1,-c(1,2)]))
plot_profile(x=count1, w=wear1, title = "")
data(example_activity_data)
count1 = c(t(example_activity_data$count[1,-c(1,2)]))
wear1 = c(t(example_activity_data$wear[1,-c(1,2)]))
plot_profile(x=count1, w=wear1, title = "Epoch Level Daily Activity Profile")
rm(list = ls())
library(nhanesdata)
library(dplyr)
load("~/Dropbox/Junrui Di/letter about weartime/data/time.rda")
load("~/Dropbox/Junrui Di/fragmentation/paper/data/raw/mc.rda")
mort_dat = subset(mc, select = c("SEQN","mortstat"))
time = merge(x = time, y = mort_dat, all.x = T)
time = time[order(time$mortstat,decreasing = F),]
#1. valid days
sum(time$weartime>=600)
sum(time$weartime>=600 & time$weartime<=1200)
sum(time$weartime>=600 & time$weartime<=1080)
die = subset(time, mortstat == 1)
sum(die$weartime>=600)
sum(die$weartime>=600 & die$weartime<=1200)
sum(die$weartime>=600 & die$weartime<=1080)
alive = subset(time, mortstat == 0)
sum(alive$weartime>=600)
sum(alive$weartime>=600 & alive$weartime<=1200)
sum(alive$weartime>=600 & alive$weartime<=1080)
#2. number of subjects
length(unique(subset(time, weartime >= 600)$SEQN))
length(unique(subset(time, weartime>=600 & weartime<=1200)$SEQN))
length(unique(subset(time, weartime>=600 & weartime<=1080)$SEQN))
length(unique(subset(alive, weartime >= 600)$SEQN))
length(unique(subset(alive, weartime>=600 & weartime<=1200)$SEQN))
length(unique(subset(alive, weartime>=600 & weartime<=1080)$SEQN))
length(unique(subset(die, weartime >= 600)$SEQN))
length(unique(subset(die, weartime>=600 & weartime<=1200)$SEQN))
length(unique(subset(die, weartime>=600 & weartime<=1080)$SEQN))
#3. test
rm(list = setdiff(ls(),c("time","mc")))
time$Seq = time$mortstat = NULL
mc = subset(mc, select = c(SEQN, SDMVSTRA,SDMVPSU,wave,mortstat))
dat10 = subset(time, weartime >= 600)
dat1020 = subset(time, weartime >= 600 & weartime <=1200)
dat1018 = subset(time, weartime >= 600 & weartime <=1080)
dat10 = dat10 %>% group_by(SEQN) %>% summarise_all(mean)
dat1020 = dat1020 %>% group_by(SEQN) %>% summarise_all(mean)
dat1018 = dat1018 %>% group_by(SEQN) %>% summarise_all(mean)
dat10 = merge(x = dat10, y = mc, all.x = T)
View(dat10)
dat1020 = merge(x = dat1020, y = mc, all.x = T)
dat1018 = merge(x = dat1018, y = mc, all.x = T)
View(dat1018)
dat10 = reweight_accel(dat10)
View(dat10)
table(dat10$valid)
sum(dat10$NormWts)
dat1020 = reweight_accel(dat1020)
dat1018 = reweight_accel(dat1018)
View(dat1018)
View(dat1020)
View(dat10)
View(dat1018)
library(survey)
svy10 = svydesign(id=~SDMVPSU,
strat=~SDMVSTRA,
weight=~NormWts,
nest=TRUE,
data=dat10)
svy1020 = svydesign(id=~SDMVPSU,
strat=~SDMVSTRA,
weight=~NormWts,
nest=TRUE,
data=dat1020)
svy1018 = svydesign(id=~SDMVPSU,
strat=~SDMVSTRA,
weight=~NormWts,
nest=TRUE,
data=dat1018)
library(tableone)
View(dat10)
View(dat1018)
var = c("sedtime","acttime")
tab10_1 = svyCreateTableOne(vars = var,strata = "mortstat",data = svy10)
pt.tab10.1 = print(tab10_1,digits = 6)
tab10_2 = svyCreateTableOne(vars = var,data = svy10)
pt.tab10.2 = print(tab10_2,format = "p",digits = 6)
rm(list = ls())
library(nhanesdata)
library(dplyr)
library(survey)
library(tableone)
load("~/Dropbox/Junrui Di/letter about weartime/data/time.rda")
load("~/Dropbox/Junrui Di/fragmentation/paper/data/raw/mc.rda")
mort_dat = subset(mc, select = c("SEQN","mortstat"))
time = merge(x = time, y = mort_dat, all.x = T)
time = time[order(time$mortstat,decreasing = F),]
#1. valid days
sum(time$weartime>=600)
sum(time$weartime>=600 & time$weartime<=1200)
sum(time$weartime>=600 & time$weartime<=1080)
die = subset(time, mortstat == 1)
sum(die$weartime>=600)
sum(die$weartime>=600 & die$weartime<=1200)
sum(die$weartime>=600 & die$weartime<=1080)
alive = subset(time, mortstat == 0)
sum(alive$weartime>=600)
sum(alive$weartime>=600 & alive$weartime<=1200)
sum(alive$weartime>=600 & alive$weartime<=1080)
#2. number of subjects
length(unique(subset(time, weartime >= 600)$SEQN))
length(unique(subset(time, weartime>=600 & weartime<=1200)$SEQN))
length(unique(subset(time, weartime>=600 & weartime<=1080)$SEQN))
length(unique(subset(alive, weartime >= 600)$SEQN))
length(unique(subset(alive, weartime>=600 & weartime<=1200)$SEQN))
length(unique(subset(alive, weartime>=600 & weartime<=1080)$SEQN))
length(unique(subset(die, weartime >= 600)$SEQN))
length(unique(subset(die, weartime>=600 & weartime<=1200)$SEQN))
length(unique(subset(die, weartime>=600 & weartime<=1080)$SEQN))
#3. test
rm(list = setdiff(ls(),c("time","mc")))
time$Seq = time$mortstat = NULL
mc = subset(mc, select = c(SEQN, SDMVSTRA,SDMVPSU,wave,mortstat))
dat10 = subset(time, weartime >= 600)
dat1020 = subset(time, weartime >= 600 & weartime <=1200)
dat1018 = subset(time, weartime >= 600 & weartime <=1080)
dat10 = dat10 %>% group_by(SEQN) %>% summarise_all(mean)
dat1020 = dat1020 %>% group_by(SEQN) %>% summarise_all(mean)
dat1018 = dat1018 %>% group_by(SEQN) %>% summarise_all(mean)
dat10 = merge(x = dat10, y = mc, all.x = T)
dat1020 = merge(x = dat1020, y = mc, all.x = T)
dat1018 = merge(x = dat1018, y = mc, all.x = T)
dat10 = reweight_accel(dat10)
dat1020 = reweight_accel(dat1020)
dat1018 = reweight_accel(dat1018)
svy10 = svydesign(id=~SDMVPSU,
strat=~SDMVSTRA,
weight=~NormWts,
nest=TRUE,
data=dat10)
svy1020 = svydesign(id=~SDMVPSU,
strat=~SDMVSTRA,
weight=~NormWts,
nest=TRUE,
data=dat1020)
svy1018 = svydesign(id=~SDMVPSU,
strat=~SDMVSTRA,
weight=~NormWts,
nest=TRUE,
data=dat1018)
var = c("sedtime","acttime")
tab10_1 = svyCreateTableOne(vars = var,strata = "mortstat",data = svy10)
pt.tab10.1 = print(tab10_1,digits = 6)
tab10_2 = svyCreateTableOne(vars = var,data = svy10)
pt.tab10.2 = print(tab10_2,format = "p",digits = 6)
#1020
tab1020_1 = svyCreateTableOne(vars = var,strata = "mortstat",data = svy1020)
pt.tab1020.1 = print(tab1020_1,digits = 6)
tab1020_2 = svyCreateTableOne(vars = var,data = svy1020)
pt.tab1020.2 = print(tab1020_2,format = "p",digits = 6)
tab10_1 = svyCreateTableOne(vars = var,strata = "mortstat",data = svy10)
pt.tab10.1 = print(tab10_1,digits = 6)
tab10_2 = svyCreateTableOne(vars = var,data = svy10)
pt.tab10.2 = print(tab10_2,format = "p",digits = 6)
tab1020_1 = svyCreateTableOne(vars = var,strata = "mortstat",data = svy1020)
pt.tab1020.1 = print(tab1020_1,digits = 6)
tab1020_2 = svyCreateTableOne(vars = var,data = svy1020)
pt.tab1020.2 = print(tab1020_2,format = "p",digits = 6)
rm(list = setdiff(ls(),c("time","mc")))
time$Seq = time$mortstat = NULL
mc = subset(mc, select = c(SEQN, SDMVSTRA,SDMVPSU,wave,mortstat))
dat1018 = subset(time, weartime >= 600 & weartime <=1080)
dat1018 = dat1018 %>% group_by(SEQN) %>% summarise_all(mean)
dat1018 = merge(x = dat1018, y = mc, all.x = T)
dat1018 = reweight_accel(dat1018)
svy1018 = svydesign(id=~SDMVPSU,
strat=~SDMVSTRA,
weight=~NormWts,
nest=TRUE,
data=dat1018)
var = c("sedtime","acttime")
#1018
tab1018_1 = svyCreateTableOne(vars = var,strata = "mortstat",data = svy1018)
pt.tab1018.1 = print(tab1018_1,digits = 6)
tab1018_2 = svyCreateTableOne(vars = var,data = svy1018)
pt.tab1018.2 = print(tab1018_2,format = "p",digits = 6)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
