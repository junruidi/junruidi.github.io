96*10/60
head(ag_totact_agem)
library(limma)
library(devtools)
#install_github("swihart/lasagnar")
library(fields)
library(lasagnar)
library(ggplot2)
library(reshape2)
library(RColorBrewer)
library(colorspace)
library(refund)
library(MASS)
library(cluster)
library(survey)
library(survival)
library(moments)
library(entropy)
library(nhanesaccel)
library(SDMTools)
require(gamlss)
rm(list = ls())
dataPathProcessed = "~/Dropbox/NHANES ISI/Processed/"
removeBadDays <- function(dataPath, cohort = 2003, threshold = 600){
## Note there are 3 potential 'flags' that data quality is an issue:
##      2 are generated by NHANES (PAXSTAT, PAXCAL) -> 1 means no issue, 2 means there is an issue
##      we take the approach that a flag on either variable means that day should not be included
##      in the analysis.
##      The third flag is based on our wear/nonwear flags so the initial step is to remove days
##      where we have an issue in the data
cohort_years <- seq(2003, 2013, by=2)
pathExt      <- paste('_', LETTERS[3:26], '.csv', sep='')[which(cohort_years == cohort)]
## load data
activity     <- read.csv(paste(dataPath, 'PAXINTEN', pathExt, sep=''), head = TRUE)
flags        <- read.csv(paste(dataPath, 'Flags', pathExt, sep=''), head = TRUE)
## get nonwear flag
flag_nonwear <- rowSums(flags[, paste('MIN', 1:1440, sep='')], na.rm = TRUE) < threshold
## re-code all non-wear time to be 0 counts
activity[, paste('MIN', 1:1440, sep='')] <- activity[, paste('MIN', 1:1440, sep='')]*flags[, paste('MIN', 1:1440, sep='')]
## remove nonwear days and days flagged by NHANES
activity     <- activity[!(flag_nonwear | activity$PAXSTAT == 2 | activity$PAXCAL == 2 | activity$PAXCAL == 9),]
# activity     <- activity[!(flag_nonwear),]
activity
}
## Here cohort is defined as the starting year for the NHANES cohort which you want to get data for.
## in this case we want both 2003-2004 and 2005-2006 cohorts
cohort1    <- 2003
cohort2    <- 2005
## --get activity--
## Here we combine the loading of the processed activity data with a function that automatically removed days
## which qualify as `bad'. Here, bad means that there are less than 10 hours of wear-time in a given day OR
## either of the two NHANES provided quality flags indicate data quality concerns
threshold  <- 10*60
Act_1       <- removeBadDays(dataPath = dataPathProcessed, cohort = cohort1, threshold = threshold)
Act_2       <- removeBadDays(dataPath = dataPathProcessed, cohort = cohort2, threshold = threshold)
ValidDays=1
## Remove subjects with less than'ValidDays' days of valid data
## VVZ: comment out if we want to include everyone with at least one valid day
Act1 <- subset(Act_1, SEQN %in% names(table(Act_1$SEQN)[table(Act_1$SEQN) >= ValidDays]))
Act2 <- subset(Act_2, SEQN %in% names(table(Act_2$SEQN)[table(Act_2$SEQN) >= ValidDays]))
## --get covariates--
Covar1 <- read.csv(paste(dataPathProcessed, 'Covariate_C.csv', sep=''), head = TRUE)
Covar2 <- read.csv(paste(dataPathProcessed, 'Covariate_D.csv', sep=''), head = TRUE)
## --create indicator variables on the actual covariate dataframes --
# #varsInterest <- c('SEQN','WTINT2YR','WTMEC2YR','SDMVPSU','SDMVSTRA',
# 'Age', 'Male', 'BMI',
# 'White','Mexican','HispanicOther','Black','OtherRace',
# 'LessThanHS','HighSchool','MoreThanHS','MissingEduc',
# 'Diabetes','CHF','CHD','Cancer','Stroke',
# 'CurrentSmoker','FormerSmoker','NeverSmoker', 'MissingSmoke',
# 'NeverDrinker', 'FormerDrinker', 'CurrentDrinker', 'HeavyDrinker','ModerateDrinker','MissingAlcohol',
# 'MobilityProblem',
# 'wave')
varsInterest <- c('SEQN','WTINT2YR','WTMEC2YR','SDMVPSU','SDMVSTRA',
'Age', 'Male','Age','wave')
## Create demographics variables
Covar1$Age <- as.integer(Covar1$RIDAGEEX/12)
Covar1$Male <- as.numeric(Covar1$RIAGENDR == 1)
Covar1$BMI <- Covar1$BMXBMI
## Create indicator variables for race
Covar1$White         <- ifelse(Covar1$RIDRETH1 == 3, 1, 0)
Covar1$Mexican       <- ifelse(Covar1$RIDRETH1 == 1, 1, 0)
Covar1$HispanicOther <- ifelse(Covar1$RIDRETH1 == 2, 1, 0)
Covar1$Black         <- ifelse(Covar1$RIDRETH1 == 4, 1, 0)
Covar1$OtherRace     <- ifelse(Covar1$RIDRETH1 == 5, 1, 0)
## Create indicator variables for education
Covar1$LessThanHS  <- ifelse(Covar1$DMDEDUC2 %in% c(1:2), 1, 0)
Covar1$HighSchool  <- ifelse(Covar1$DMDEDUC2 %in% c(3), 1, 0)
Covar1$MoreThanHS  <- ifelse(Covar1$DMDEDUC2 %in% c(4:5), 1, 0)
Covar1$MissingEduc <- ifelse(is.na(Covar1$DMDEDUC2) | Covar1$DMDEDUC2 %in% c(7,9), 1, 0)
## Create indicator variables for certain comorbidities
Covar1$Diabetes <- ifelse(Covar1$DIQ010 == 1, 1, 0)
Covar1$CHF      <- ifelse(Covar1$MCQ160B == 1, 1, 0)
Covar1$CHD      <- ifelse(Covar1$MCQ160C == 1, 1, 0)
Covar1$Cancer   <- ifelse(Covar1$MCQ220 == 1, 1, 0)
Covar1$Stroke   <- ifelse(Covar1$MCQ160F == 1, 1, 0)
## Create indicator variables for smoking
Covar1$CurrentSmoker <- ifelse(Covar1$SmokeCigs == 'Current' & !is.na(Covar1$SmokeCigs), 1, 0)
Covar1$FormerSmoker  <- ifelse(Covar1$SmokeCigs == 'Former' & !is.na(Covar1$SmokeCigs), 1, 0)
Covar1$NeverSmoker  <- ifelse(Covar1$SmokeCigs == 'Never' & !is.na(Covar1$SmokeCigs), 1, 0)
Covar1$MissingSmoke  <- ifelse(is.na(Covar1$SmokeCigs), 1, 0)
## Create indicator variables for drinking
Covar1$NeverDrinker     <- ifelse(Covar1$Alcohol == 'Never' & !is.na(Covar1$Alcohol), 1, 0)
Covar1$FormerDrinker    <- ifelse(Covar1$Alcohol == 'Former' & !is.na(Covar1$Alcohol), 1, 0)
Covar1$CurrentDrinker   <- ifelse(Covar1$Alcohol == 'Current'& !is.na(Covar1$Alcohol), 1, 0)
Covar1$HeavyDrinker     <- ifelse(Covar1$DrinkStatus == 'Heavy Drinker'& !is.na(Covar1$DrinkStatus), 1, 0)
Covar1$ModerateDrinker  <- ifelse(Covar1$DrinkStatus == 'Moderate Drinker' & !is.na(Covar1$DrinkStatus), 1, 0)
Covar1$MissingAlcohol   <- ifelse(is.na(Covar1$DrinkStatus), 1, 0)
## Create indicator variables for mobility
Covar1$MobilityProblem  <- ifelse(Covar1$MobilityProblem == 'Any Difficulty', 1, 0)
## Create wave variable for survey weight adjustment step
Covar1$wave <- 1
## Create demographics variables
Covar2$Age <- as.integer(Covar2$RIDAGEEX/12)
Covar2$Male <- as.numeric(Covar2$RIAGENDR == 1)
Covar2$BMI <- Covar2$BMXBMI
## Create indicator variables for race
Covar2$White         <- ifelse(Covar2$RIDRETH1 == 3, 1, 0)
Covar2$Mexican       <- ifelse(Covar2$RIDRETH1 == 1, 1, 0)
Covar2$HispanicOther <- ifelse(Covar2$RIDRETH1 == 2, 1, 0)
Covar2$Black         <- ifelse(Covar2$RIDRETH1 == 4, 1, 0)
Covar2$OtherRace     <- ifelse(Covar2$RIDRETH1 == 5, 1, 0)
## Create indicator variables for education
Covar2$LessThanHS  <- ifelse(Covar2$DMDEDUC2 %in% c(1:2), 1, 0)
Covar2$HighSchool  <- ifelse(Covar2$DMDEDUC2 %in% c(3), 1, 0)
Covar2$MoreThanHS  <- ifelse(Covar2$DMDEDUC2 %in% c(4:5), 1, 0)
Covar2$MissingEduc <- ifelse(is.na(Covar2$DMDEDUC2) | Covar2$DMDEDUC2 %in% c(7,9), 1, 0)
## Create indicator variables for certain comorbidities
Covar2$Diabetes <- ifelse(Covar2$DIQ010 == 1, 1, 0)
Covar2$CHF      <- ifelse(Covar2$MCQ160B == 1, 1, 0)
Covar2$CHD      <- ifelse(Covar2$MCQ160C == 1, 1, 0)
Covar2$Cancer   <- ifelse(Covar2$MCQ220 == 1, 1, 0)
Covar2$Stroke   <- ifelse(Covar2$MCQ160F == 1, 1, 0)
## Create indicator variables for smoking
Covar2$CurrentSmoker <- ifelse(Covar2$SmokeCigs == 'Current' & !is.na(Covar2$SmokeCigs), 1, 0)
Covar2$FormerSmoker  <- ifelse(Covar2$SmokeCigs == 'Former' & !is.na(Covar2$SmokeCigs), 1, 0)
Covar2$NeverSmoker  <- ifelse(Covar2$SmokeCigs == 'Never' & !is.na(Covar2$SmokeCigs), 1, 0)
Covar2$MissingSmoke  <- ifelse(is.na(Covar2$SmokeCigs), 1, 0)
## Create indicator variables for drinking
Covar2$NeverDrinker     <- ifelse(Covar2$Alcohol == 'Never' & !is.na(Covar2$Alcohol), 1, 0)
Covar2$FormerDrinker    <- ifelse(Covar2$Alcohol == 'Former' & !is.na(Covar2$Alcohol), 1, 0)
Covar2$CurrentDrinker   <- ifelse(Covar2$Alcohol == 'Current'& !is.na(Covar2$Alcohol), 1, 0)
Covar2$HeavyDrinker     <- ifelse(Covar2$DrinkStatus == 'Heavy Drinker'& !is.na(Covar2$DrinkStatus), 1, 0)
Covar2$ModerateDrinker  <- ifelse(Covar2$DrinkStatus == 'Moderate Drinker' & !is.na(Covar2$DrinkStatus), 1, 0)
Covar2$MissingAlcohol   <- ifelse(is.na(Covar2$DrinkStatus), 1, 0)
Covar2$MobilityProblem  <- ifelse(Covar2$MobilityProblem == 'Any Difficulty', 1, 0)
## Create wave variable for survey weight adjustment step
Covar2$wave <- 2
## subset covariate data
Covar1 <- Covar1[,varsInterest]
Covar2 <- Covar2[,varsInterest]
Covar1=Covar1[complete.cases(Covar1),]
Covar2=Covar2[complete.cases(Covar2),]
colnames(Covar1)[colnames(Covar1) %in% c('WTINT2YR','WTMEC2YR')] <- tolower(colnames(Covar1)[colnames(Covar1) %in% c('WTINT2YR','WTMEC2YR')])
colnames(Covar2)[colnames(Covar2) %in% c('WTINT2YR','WTMEC2YR')] <- tolower(colnames(Covar2)[colnames(Covar2) %in% c('WTINT2YR','WTMEC2YR')])
## --get mortality data--
# Mort1  <- read.csv(paste(dataPathProcessed, 'Mortality_C.csv', sep = ''), head=TRUE)
# Mort2  <- read.csv(paste(dataPathProcessed, 'Mortality_D.csv', sep = ''), head=TRUE)
## --merge activity and covariates--
## valid column just indicates all rows are to be used in the re-weighting process
valid <- 1
allData1   <- cbind.data.frame(Covar1[match(Act1$SEQN, Covar1$SEQN),],
valid,
Act1[, -1])
allData2   <- cbind.data.frame(Covar2[match(Act2$SEQN, Covar2$SEQN),],
valid,
Act2[, -1])
# TableRemove1 <- as.data.frame(table(Covar1[Covar1$SEQN %in% ActRemove1$SEQN,]$Age))
# TableRemove2 <- as.data.frame(table(Covar2[Covar2$SEQN %in% ActRemove2$SEQN,]$Age))
# colnames(TableRemove1) <- colnames(TableRemove2) <- c("Age","Freq")
# TableRemove <- merge(TableRemove1,TableRemove2,by="Age",all=TRUE)
# write.csv(TableRemove,file=paste("TableRemove_WD=",ValidDays,".csv"))
#
#
## VVZ
# rm(list=c('Act1','Act2','Covar1','Covar2','Mort1','Mort2','cohort1','cohort2','threshold',
#           'dataPathProcessed','valid','varsInterest','removeBadDays'))
## -- create merged dataset that includes 2003-2004 and 2005-2006 cohorts --
allData = rbind(allData1, allData2)
allData = subset(allData, Male == 1)
## create hour-level activity
infoCols <- substr(colnames(allData), 1, 3) != 'MIN'
x.unlist = allData[,!infoCols]
# for(i in 1:24){
#   allData[[paste0('act', ifelse(i < 10, paste0('0',i), i))]] <- rowSums(log(x.unlist[,((60*(i-1)+1):(60*i))]+1), na.rm = TRUE)
# }
for(i in 1:24){
allData[[paste0('act', ifelse(i < 10, paste0('0',i), i))]] <- rowSums(x.unlist[,((60*(i-1)+1):(60*i))], na.rm = TRUE)
}
for(i in 1:1440){
allData[[paste0('logmin', ifelse(i < 10, paste0('0',i), i))]] <- log(x.unlist[,i]+1)
}
##
infoMinCols <- substr(colnames(allData), 1, 3) != 'MIN'
avgDaily  <- by(allData[,infoMinCols], allData$SEQN, function(x){
## Identify which columns are not associated with activity counts
## and, by extension, which columns are associaetd with activity counts
infoActCols <- substr(colnames(x), 1, 3) != 'act'|| substr(colnames(x), 1, 6) != 'logmin'
## Take the log of the sum of activity counts across all days, divided by
## the total number of days.
act   <- colSums(x[,!infoActCols], na.rm = TRUE)/nrow(x)
## return the info columns (covariate) as well as the logSum summary measure
x[1, !infoActCols] = act
cbind.data.frame(x[1, infoActCols], x[1, !infoActCols])
})
library(plyr)
allDataHour      <- ldply(avgDaily)[, -1]
#allDataHour50 <- allDataHour
## - Subset older than 50 y.o. and drop accidental deaths (ucod_leading == 4)
allDataHour50 = subset(allDataHour, (Age >= 50) & (Age < 85)) # it looks like there is no one older than 85 who was wearing an accelerometer
#allDataHour50 = allDataHour50[-which(allDataHour50$ucod_leading == 4),] # drops 8 accidental deaths, i'm not sure how to get rid of NA in True/False comparison, so I use which
## - Attach data
attach(allDataHour50)
### - Drop incomplete cases
# X = cbind.data.frame(permth_exm, mortstat,
#                      Age, Male, BMI,
#                      Mexican, Black, HispanicOther, OtherRace,
#                      HighSchool, MoreThanHS,
#                      Diabetes, CHF, CHD, Cancer, Stroke,
#                      CurrentSmoker, FormerSmoker,
#                      FormerDrinker, ModerateDrinker,
#                      HeavyDrinker, MissingAlcohol,
#                      MobilityProblem)
X = cbind.data.frame(Age, Male)
complete.cases.id = complete.cases(X)
allDataHour50 = allDataHour50[complete.cases.id,]
reweight_age=function(age){
## - Adjust survey weights
allDataHour50.wave1.age = subset(allDataHour50, wave == 1 & Age == age)
allDataHour50.wave2.age = subset(allDataHour50, wave == 2 & Age == age)
allDataHour50.wave1.age$valid    <- 1
allDataHour50.wave1.adjusted.age <- nhanes.accel.reweight(acceldata = allDataHour50.wave1.age,  wave = 1, seqn.column = 1,
include.column = which(colnames(allDataHour50.wave1.age) == 'valid'))
allDataHour50.wave2.age$valid   <- 1
allDataHour50.wave2.adjusted.age <- nhanes.accel.reweight(acceldata = allDataHour50.wave2.age,  wave = 2, seqn.column = 1,
include.column = which(colnames(allDataHour50.wave2.age) == 'valid'))
allDataHour50.age = rbind(allDataHour50.wave1.adjusted.age, allDataHour50.wave2.adjusted.age)
allDataHour50.age$wtmec4yr_adj = allDataHour50.age$wtmec2yr_adj/2
return(allDataHour50.age)
}
reweight_age_init=NULL
for(i in 50:84){
reweight_age_rec=reweight_age(i)
reweight_age_init=rbind(reweight_age_init,reweight_age_rec)
}
totact_age=as.data.frame(reweight_age_init)
totact_age=totact_age[sort.list(totact_age$Age),]
n=nrow(totact_age)
log_age=matrix(nrow=n,ncol=144)
View(reweight_age_rec)
View(totact_age)
View(allDataHour50)
View(totact_age)
xx = totact_age[p,38:1477]
xx = totact_age[,38:1477]
View(xx)
60*16
head(xx)
mov.avgn=function(p){
shrnk=numeric(144)
totact_age1=totact_age[p,38:1477]
for(i in 1:144){shrnk[i]=mean(unlist(totact_age1)[(10*(i-1)+1):(10*i)])}
return(shrnk)
}
# svyColMeans=function(x,weights){
#   dataSvy_age <- svydesign(id= ~SDMVPSU, strata = ~SDMVSTRA, weights = ~weights,
#                        data = x, nest = TRUE)
#
# r=nrow(x)
# c=ncol(x)
# logmin_age=numeric(c)
#
# for(i in 1:c){logmin_age[i]=svymean(x[,i],design=dataSvy_age)
#
# }
#
# return(logmin_age)
# }
for(i in 1:n){
log_age[i,]=mov.avgn(i)}
View(log_age)
dim(log_age)
log_age=log_age[complete.cases(log_age),]
totact_age=totact_age[complete.cases(totact_age),]
totact_agef=cbind(totact_age[,1],log_age,totact_age$Age,totact_age$wtmec4yr_adj,totact_age$SDMVPSU,totact_age$SDMVSTRA)
totact_agefd=as.data.frame(totact_agef)
colnames(totact_agefd)[146]="Age"
colnames(totact_agefd)[147]="weights"
colnames(totact_agefd)[148]="SDMVPSU"
colnames(totact_agefd)[149]="SDMVSTRA"
LogMinVariables <- paste("V", 2:145, sep="")
Formula <- formula(paste("~",
paste(LogMinVariables, collapse=" + ")))
design_age=svydesign(id= ~SDMVPSU, strata = ~SDMVSTRA, weights = ~weights,data=totact_agefd,nest=TRUE)
ag_totact_agef=svyby(Formula,by=~Age,design=design_age,FUN=svymean)
ag_totact_agem=(matrix(unlist(ag_totact_agef),nrow=35))
ag_totact_agem=cbind(ag_totact_agem[,1:145],ag_totact_agem[,1])
dim(ag_totact_agem)
library(refund)
p = 20
smth_age=fbps(ag_totact_agem[,2:145],lambda=p)$Yhat
totact_agefs=cbind(seq(50,84,1),smth_age,seq(50,84,1))
plot(totact_agefs[1,2:145],ty='l',ylim=c(0,5),font.axis=2,cex.axis=1.6,cex.lab=2,cex.main=1.5,lwd=3,xaxt="n",lty=1,main=paste("Diurnal LAC Patterns in","50","-","84","y.o."), ylab="LAC",xlab="Time of Day",col="Black")
labx = c("12AM","4AM","8AM","12PM","4PM","8PM","12AM")
lines(totact_agefs[6,2:145],ty='l',lwd=3,lty=2,col="Green")
lines(totact_agefs[11,2:145],ty='l',lwd=3,lty=3,col="Blue")
lines(totact_agefs[16,2:145],ty='l',lwd=3,lty=4,col="Red")
lines(totact_agefs[21,2:145],ty='l',lwd=3,lty=1,col="Orange")
lines(totact_agefs[26,2:145],ty='l',lwd=3,lty=2,col="Gold")
lines(totact_agefs[31,2:145],ty='l',lwd=3,lty=3,col="Grey56")
lines(totact_agefs[35,2:145],ty='l',lwd=3,lty=4,col="mediumorchid")
legend(1,5, cex=1,text.font=1,legend=c("50 y.o.","55 y.o.","60 y.o.","65 y.o.","70 y.o.","75 y.o.","80 y.o.","84 y.o."),col=c("Black","Green","Blue","Red","Orange","Gold","Grey56","mediumorchid"),lty=c(1,2,3,4,1,2,3,4),lwd=2)
axis(1,font.axis=2,seq(0,144,by = 24),cex.axis=1.1,lab=labx)
View(ag_totact_agem)
install.packages(c("devtools", "fields"))
load("~/Dropbox/jun")
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round6/age50/Result_K3.rda")
Resutl_K3$eigenl
(Resutl_K3$eigenl)^2/sum((Resutl_K3$eigenl)^2)
cumsum((Resutl_K3$eigenl)^2/sum((Resutl_K3$eigenl)^2)*100)
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round6/age50/Result_K4.rda")
cumsum((Resutl_K3$eigenl)^2/sum((Resutl_K3$eigenl)^2)*100)
cumsum((Resutl_K4$eigenl)^2/sum((Resutl_K4$eigenl)^2)*100)
#################################################
##    Survival analysis on score from K2, K3, K4   ##
#################################################
###########################################################################################################
#K2
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round6/cov.rda")
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round6/age50/score_K2.rda")
cov = subset(cov, age >= 50)
score = as.data.frame(score_K2)
surv = cbind(cov, score)
surv$survyr = surv$permth_exm/12
include.column = which(names(surv)=="include")
c1 = subset(surv,yr==34)
d1 = subset(surv,yr==56)
library(nhanesaccel)
c2 = nhanes.accel.reweight(acceldata = c1, wave = 1, seqn.column = 1,
include.column = include.column)
d2 = nhanes.accel.reweight(acceldata = d1, wave = 2, seqn.column = 1,
include.column = include.column)
surv$wt4yr = c(c2$wtmec2yr_adj/2,d2$wtmec2yr_adj/2)
ori.measurement = surv[,c(1,37:60)]
names(surv)[37:60] = paste0("z.",names(surv)[37:60])
for (i in 37:60){
surv[,i] = scale(surv[,i], center = T, scale = T)
}
surv = merge(x=ori.measurement,y=surv)
#create survey object
svydata = svydesign(id=~SDMVPSU,
strat=~SDMVSTRA,
weight=~wt4yr,
nest=TRUE,
data=surv)
cox.ph.v1= svycoxph(Surv(permth_exm/12,mortstat) ~ age + Male  + BMXBMI+
diabetes + CHF + stroke + cancer + CHD+
MobilityProblem + Mexican + HispanicOther + Black + OtherRace +
LessThanHS + HighSchool + MissingEduc +CurrentSmoker + FormerSmoker +
FormerDrinker + ModerateDrinker+ HeavyDrinker+ MissingAlcohol+
z.PC1,design=svydata)
summary(cox.ph.v1)
#z.PC1              0.4356     2.2958    0.3390    0.5596
cox.ph.v2= svycoxph(Surv(permth_exm/12,mortstat) ~ age + Male  + BMXBMI+
diabetes + CHF + stroke + cancer + CHD+
MobilityProblem + Mexican + HispanicOther + Black + OtherRace +
LessThanHS + HighSchool + MissingEduc +CurrentSmoker + FormerSmoker +
FormerDrinker + ModerateDrinker+ HeavyDrinker+ MissingAlcohol+
z.PC2,design=svydata)
summary(cox.ph.v2)
cox.ph.v3= svycoxph(Surv(permth_exm/12,mortstat) ~ age + Male  + BMXBMI+
diabetes + CHF + stroke + cancer + CHD+
MobilityProblem + Mexican + HispanicOther + Black + OtherRace +
LessThanHS + HighSchool + MissingEduc +CurrentSmoker + FormerSmoker +
FormerDrinker + ModerateDrinker+ HeavyDrinker+ MissingAlcohol+
z.PC3,design=svydata)
summary(cox.ph.v3)
cox.ph.v4= svycoxph(Surv(permth_exm/12,mortstat) ~ age + Male  + BMXBMI+
diabetes + CHF + stroke + cancer + CHD+
MobilityProblem + Mexican + HispanicOther + Black + OtherRace +
LessThanHS + HighSchool + MissingEduc +CurrentSmoker + FormerSmoker +
FormerDrinker + ModerateDrinker+ HeavyDrinker+ MissingAlcohol+
z.PC4,design=svydata)
summary(cox.ph.v4)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
setwd("D:/Dropbox/web/junruidi.github.io/")
rmarkdown::render_site()
install.packages("rmarkdown")
rmarkdown::render_site()
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
