result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,],summary(mod2)$coefficients[3,],summary(mod3)$coefficients[3,],
summary(mod4)$coefficients[c(3:4),]))
result.ij
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,],summary(mod2)$coefficients[3,],summary(mod3)$coefficients[3,],
summary(mod4)$coefficients[c(3:4),]))
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("T1","T3")))
result.ij
mode1
mod1
confint(mod1)
summary(mod1)$coefficients
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij)
result.ij
confint(mod1)$coefficients
confint(mod1)
confint(mod4)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[3,],confint(mod2)[3,],confint(mod3)[3,],
confint(mod4)[c(3:4),]))
ci.ij
result.ij
result.ij = cbind(result.ij,ci.ij)
result.ij
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij)
result.ij
row.names(result.ij) = NULL
result.ij
result.ij$outcome = roi.i
result.ij
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[3,],confint(mod2)[3,],confint(mod3)[3,],
confint(mod4)[c(3:4),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[3,],confint(mod2)[3,],confint(mod3)[3,],
confint(mod4)[c(3:4),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij$models = c("model1","model2","model3","model3_tertile","model3_tertile")
result.ij
log_adj = data.frame()
for(i in 1:length(roi_lists)){
roi.i = roi_lists[[i]]
for(j in 1:length(sleep.vars)){
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[3,],confint(mod2)[3,],confint(mod3)[3,],
confint(mod4)[c(3:4),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij$models = c("model1","model2","model3","model3_tertile","model3_tertile")
log_adj = rbind(log_adj,result.ij)
}
}
View(log_adj)
rm(list = ls())
setwd("~/Dropbox/Junrui Di/BLSA Sleep/")
load("data/analysis/analysis.rda")
# Models to fit
# 1. crude model
# 2. crude model + age + gender + race
# 3. crude model + age + gender + race + educ_years + CESD
# log(roi) = bx + alog(icv)
# log(roi) = bx + log(icv)
# tertiles of all sleep variables and continuos (scale/center)
ApplyTirt <- function(x) {
a = as.character(cut(x, breaks=c(quantile(x,seq(0, 1, by = 1/3))),
labels=c("T1","T2","T3"), include.lowest=TRUE))
b = factor(a, levels = c("T2","T1","T3"))
b
}
sleep.vars = c("tst_mean","waso_mean","osl_mean","eff_mean","frag_mean")
# 2. log(ICV) as offset
log_adj = data.frame()
i = 1
roi.i = roi_lists[[i]]
j = 1
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,") ~  ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,") ~ ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,") ~ ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,") ~ ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
fm1
fm2
fm1 = as.formula(paste0("log(",roi.i,"/icv70) ~  ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2
icv_offset = data.frame()
for(i in 1:length(roi_lists)){
roi.i = roi_lists[[i]]
for(j in 1:length(sleep.vars)){
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,"/icv70) ~  ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[3,],confint(mod2)[3,],confint(mod3)[3,],
confint(mod4)[c(3:4),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij$models = c("model1","model2","model3","model3_tertile","model3_tertile")
icv_offset = rbind(icv_offset,result.ij)
}
}
i
# 2. log(ICV) as offset
icv_offset = data.frame()
i = 1
j  = 1
roi.i = roi_lists[[i]]
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,"/icv70) ~  ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
summary(mod1)
summary(mod2)
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[2,c(1,4)],summary(mod2)$coefficients[2,c(1,4)],summary(mod3)$coefficients[2,c(1,4)],
summary(mod4)$coefficients[c(2:3),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[2,],confint(mod2)[2,],confint(mod3)[2,],
confint(mod4)[c(2,3),]))
result.ij
summary(mod4)$coefficients
result.ij
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[2,c(1,4)],summary(mod2)$coefficients[2,c(1,4)],summary(mod3)$coefficients[2,c(1,4)],
summary(mod4)$coefficients[c(2:3),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[2,],confint(mod2)[2,],confint(mod3)[2,],
confint(mod4)[c(2,3),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij
icv_offset = data.frame()
for(i in 1:length(roi_lists)){
roi.i = roi_lists[[i]]
for(j in 1:length(sleep.vars)){
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,"/icv70) ~  ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[2,c(1,4)],summary(mod2)$coefficients[2,c(1,4)],summary(mod3)$coefficients[2,c(1,4)],
summary(mod4)$coefficients[c(2:3),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[2,],confint(mod2)[2,],confint(mod3)[2,],
confint(mod4)[c(2,3),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij$models = c("model1","model2","model3","model3_tertile","model3_tertile")
icv_offset = rbind(icv_offset,result.ij)
}
}
View(icv_offset)
rm(list = ls())
setwd("~/Dropbox/Junrui Di/BLSA Sleep/")
load("data/analysis/analysis.rda")
# Models to fit
# 1. crude model
# 2. crude model + age + gender + race
# 3. crude model + age + gender + race + educ_years + CESD
# log(roi) = bx + alog(icv)
# log(roi) = bx + log(icv)
# tertiles of all sleep variables and continuos (scale/center)
ApplyTirt <- function(x) {
a = as.character(cut(x, breaks=c(quantile(x,seq(0, 1, by = 1/3))),
labels=c("T1","T2","T3"), include.lowest=TRUE))
b = factor(a, levels = c("T1","T2","T3"))
b
}
sleep.vars = c("tst_mean","waso_mean","osl_mean","eff_mean","frag_mean")
# 1. adjust for log(ICV)
log_adj = data.frame()
for(i in 1:length(roi_lists)){
roi.i = roi_lists[[i]]
for(j in 1:length(sleep.vars)){
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[3,],confint(mod2)[3,],confint(mod3)[3,],
confint(mod4)[c(3:4),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij$models = c("model1","model2","model3","model3_tertile","model3_tertile")
log_adj = rbind(log_adj,result.ij)
}
}
# 2. log(ICV) as offset
icv_offset = data.frame()
for(i in 1:length(roi_lists)){
roi.i = roi_lists[[i]]
for(j in 1:length(sleep.vars)){
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,"/icv70) ~  ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[2,c(1,4)],summary(mod2)$coefficients[2,c(1,4)],summary(mod3)$coefficients[2,c(1,4)],
summary(mod4)$coefficients[c(2:3),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[2,],confint(mod2)[2,],confint(mod3)[2,],
confint(mod4)[c(2,3),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij$models = c("model1","model2","model3","model3_tertile","model3_tertile")
icv_offset = rbind(icv_offset,result.ij)
}
}
View(log_adj)
rm(list = ls())
setwd("~/Dropbox/Junrui Di/BLSA Sleep/")
load("data/analysis/analysis.rda")
# Models to fit
# 1. crude model
# 2. crude model + age + gender + race
# 3. crude model + age + gender + race + educ_years + CESD
# log(roi) = bx + alog(icv)
# log(roi) = bx + log(icv)
# tertiles of all sleep variables and continuos (scale/center)
ApplyTirt <- function(x) {
a = as.character(cut(x, breaks=c(quantile(x,seq(0, 1, by = 1/3))),
labels=c("T1","T2","T3"), include.lowest=TRUE))
b = factor(a, levels = c("T1","T2","T3"))
b
}
sleep.vars = c("tst_mean","waso_mean","osl_mean","eff_mean","frag_mean")
# 1. adjust for log(ICV)
log_adj = data.frame()
for(i in 1:length(roi_lists)){
roi.i = roi_lists[[i]]
for(j in 1:length(sleep.vars)){
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[3,],confint(mod2)[3,],confint(mod3)[3,],
confint(mod4)[c(3:4),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij$models = c("model1","model2","model3","model3_tertile","model3_tertile")
log_adj = rbind(log_adj,result.ij)
}
}
View(log_adj)
rm(list = ls())
setwd("~/Dropbox/Junrui Di/BLSA Sleep/")
load("data/analysis/analysis.rda")
# Models to fit
# 1. crude model
# 2. crude model + age + gender + race
# 3. crude model + age + gender + race + educ_years + CESD
# log(roi) = bx + alog(icv)
# log(roi) = bx + log(icv)
# tertiles of all sleep variables and continuos (scale/center)
ApplyTirt <- function(x) {
a = as.character(cut(x, breaks=c(quantile(x,seq(0, 1, by = 1/3))),
labels=c("T1","T2","T3"), include.lowest=TRUE))
b = factor(a, levels = c("T2","T1","T3"))
b
}
sleep.vars = c("tst_mean","waso_mean","osl_mean","eff_mean","frag_mean")
# 1. adjust for log(ICV)
log_adj = data.frame()
for(i in 1:length(roi_lists)){
roi.i = roi_lists[[i]]
for(j in 1:length(sleep.vars)){
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[3,],confint(mod2)[3,],confint(mod3)[3,],
confint(mod4)[c(3:4),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,c("_T1","_T3")))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij$models = c("model1","model2","model3","model3_tertile","model3_tertile")
log_adj = rbind(log_adj,result.ij)
}
}
View(log_adj)
rm(list = ls())
setwd("~/Dropbox/Junrui Di/BLSA Sleep/")
load("data/analysis/analysis.rda")
# Models to fit
# 1. crude model
# 2. crude model + age + gender + race
# 3. crude model + age + gender + race + educ_years + CESD
# log(roi) = bx + alog(icv)
# log(roi) = bx + log(icv)
# tertiles of all sleep variables and continuos (scale/center)
ApplyTirt <- function(x) {
a = as.character(cut(x, breaks=c(quantile(x,seq(0, 1, by = 1/3))),
labels=c("T1","T2","T3"), include.lowest=TRUE))
b = factor(a, levels = c("T2","T1","T3"))
b
}
sleep.vars = c("tst_mean","waso_mean","osl_mean","eff_mean","frag_mean")
i = 1
# 1. adjust for log(ICV)
log_adj = data.frame()
rm(list = ls())
setwd("~/Dropbox/Junrui Di/BLSA Sleep/")
load("data/analysis/analysis.rda")
# Models to fit
# 1. crude model
# 2. crude model + age + gender + race
# 3. crude model + age + gender + race + educ_years + CESD
# log(roi) = bx + alog(icv)
# log(roi) = bx + log(icv)
# tertiles of all sleep variables and continuos (scale/center)
ApplyTirt <- function(x) {
a = as.character(cut(x, breaks=c(quantile(x,seq(0, 1, by = 1/3))),
labels=c("T1","T2","T3"), include.lowest=TRUE))
b = factor(a, levels = c("T1","T2","T3"))
b
}
sleep.vars = c("tst_mean","waso_mean","osl_mean","eff_mean","frag_mean")
# 1. adjust for log(ICV)
log_adj = data.frame()
i = 1
j = 1
roi.i = roi_lists[[i]]
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[3,],confint(mod2)[3,],confint(mod3)[3,],
confint(mod4)[c(3:4),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij
library(qdap)
char2end(row.names(result.ij)[4:5],".",2)
rm(list = ls())
setwd("~/Dropbox/Junrui Di/BLSA Sleep/")
library(qdap)
load("data/analysis/analysis.rda")
# Models to fit
# 1. crude model
# 2. crude model + age + gender + race
# 3. crude model + age + gender + race + educ_years + CESD
# log(roi) = bx + alog(icv)
# log(roi) = bx + log(icv)
# tertiles of all sleep variables and continuos (scale/center)
ApplyTirt <- function(x) {
a = as.character(cut(x, breaks=c(quantile(x,seq(0, 1, by = 1/3))),
labels=c("T1","T2","T3"), include.lowest=TRUE))
b = factor(a, levels = c("T1","T2","T3"))
b
}
sleep.vars = c("tst_mean","waso_mean","osl_mean","eff_mean","frag_mean")
# 1. adjust for log(ICV)
log_adj = data.frame()
for(i in 1:length(roi_lists)){
roi.i = roi_lists[[i]]
for(j in 1:length(sleep.vars)){
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,") ~ log(icv70) + ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[3,c(1,4)],summary(mod2)$coefficients[3,c(1,4)],summary(mod3)$coefficients[3,c(1,4)],
summary(mod4)$coefficients[c(3:4),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[3,],confint(mod2)[3,],confint(mod3)[3,],
confint(mod4)[c(3:4),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,char2end(row.names(result.ij)[4:5],".",2)))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij$models = c("model1","model2","model3","model3_tertile","model3_tertile")
log_adj = rbind(log_adj,result.ij)
}
}
# 2. log(ICV) as offset
icv_offset = data.frame()
for(i in 1:length(roi_lists)){
roi.i = roi_lists[[i]]
for(j in 1:length(sleep.vars)){
var.j = sleep.vars[j]
fm1 = as.formula(paste0("log(",roi.i,"/icv70) ~  ","scale(", var.j,")"))
fm2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race"))
fm3 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","scale(", var.j,") + Age + gender + race + CESD + educ_years"))
fm3.2 = as.formula(paste0("log(",roi.i,"/icv70) ~ ","ApplyTirt(", var.j,") + Age + gender + race + CESD + educ_years"))
mod1 = lm(fm1, data = analysis)
mod2 = lm(fm2, data = analysis)
mod3 = lm(fm3, data = analysis)
mod4 = lm(fm3.2, data = analysis)
result.ij = as.data.frame(rbind(summary(mod1)$coefficients[2,c(1,4)],summary(mod2)$coefficients[2,c(1,4)],summary(mod3)$coefficients[2,c(1,4)],
summary(mod4)$coefficients[c(2:3),c(1,4)]))
ci.ij = as.data.frame(rbind(confint(mod1)[2,],confint(mod2)[2,],confint(mod3)[2,],
confint(mod4)[c(2,3),]))
result.ij = cbind(result.ij,ci.ij)
result.ij$sig = ifelse(result.ij$`Pr(>|t|)` < 0.05, "*","")
result.ij$predictor = c(rep(var.j,3),paste0(var.j,char2end(row.names(result.ij)[4:5],".",2)))
row.names(result.ij) = NULL
result.ij$outcome = roi.i
result.ij$models = c("model1","model2","model3","model3_tertile","model3_tertile")
icv_offset = rbind(icv_offset,result.ij)
}
}
View(log_adj)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
