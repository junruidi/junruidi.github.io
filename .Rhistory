dat2 = read.csv("~/Dropbox/Shared Folder/Data Management - post data to share here by date/Panel Data/questionnaires-2017_01_11.csv")
load("~/Dropbox/Shared Folder/PACS Concordance/us.rda")
dat2 = subset(dat2, User %in% us)
bmi = subset(dat2, select = c(Study.ID, patientCharacter4))
bmi$BMI = gsub('[A-Z]+',"",bmi$patientCharacter4)
bmi$BMI = as.numeric(gsub(':',"",bmi$BMI))
bmi = unique(bmi)
bmi$ID = gsub("PAC-","",bmi$Study.ID)
bmi = subset(bmi, select = c(ID,BMI))
bmi$BMICat = character(nrow(bmi))
# bmi$BMICat = ifelse(bmi$BMI <15, "VSU", bmi$BMICat)
# bmi$BMICat = ifelse(bmi$BMI >=15 & bmi$BMI <16, "SU", bmi$BMICat)
#bmi$BMICat = ifelse(bmi$BMI >=16 & bmi$BMI <18.5, "1", bmi$BMICat)
bmi$BMICat = ifelse(bmi$BMI <25, "1", bmi$BMICat) #underweight and normal
bmi$BMICat = ifelse(bmi$BMI >=25 & bmi$BMI <30, "2", bmi$BMICat) #overweight
bmi$BMICat = ifelse(bmi$BMI >=30 & bmi$BMI <35, "3", bmi$BMICat) #obeseI
bmi$BMICat = ifelse(bmi$BMI >=35,"4", bmi$BMICat) #obese II III
dat3 = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre6/pacs_raceEthnicity.csv")
race = dat3
race$race = as.character(race$race)
race$race2 = ifelse(race$race %in% c("Hispanic","Other race-ethnicity"), "other",race$race)
race = subset(race, select = c(ID,race2))
names(race)[2] = "race"
charc = subset(dat, select = c(ID,Skin.Pigmentation,
X.Hematoma,X.Abrasion))
names(charc) = c("ID","pigmen","hematoma","abrasion")
for(i in 2:4){
charc[,i] = as.character(charc[,i])
}
charc$pig[which(charc$pigmen=="")] = "Missing"
charc$pig[which(charc$pigmen=="Dark")] = "D&M"
charc$pig[which(charc$pigmen=="Medium")] = "D&M"
charc$pig[which(charc$pigmen=="Light")] = "Light"
charc$hematoma[which(charc$hematoma=="")] = "Missing"
charc$abrasion[which(charc$abrasion=="")] = "Missing"
cov = merge(x = AOOTA, y = gustello, all.x = T)
cov = merge(x = cov, y = tscherne, all.x = T)
cov = merge(x = cov, y = charc, all.x = T)
cov = merge(x = cov, y = bmi, all.x = T)
cov = merge(x = cov, y = race, all.x = T)
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/write up3/cohort2.rda")
id = union(oxy$ID,pre$ID)
cov = subset(cov, ID %in% id)
summary(cov$BMI)
sum(cov$BMI<30)
sum(cov$BMI<30)/139
sum(cov$BMI>=35)/139
sum(cov$BMI>=35)
sum(cov$BMI< 35 & cov$BMI>=30)
26+32+81
26/139
rm(list = ls())
dat = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre3/METRCPACS_DATA_LABELS_2016-12-17_1047.csv")
site = subset(dat,select = c(ID,Data.Access.Group))
site$site = substr(site$Data.Access.Group,1,3)
site$site2 = ifelse(site$site %in% c("BAM","DHA","HCM","WFU"),"Others",site$site)
site = subset(site, select = c(ID,site,site2))
AOOTA = subset(dat, select = c(ID,AO.OTA))
AOOTA$AO = substr(AOOTA$AO.OTA,1,2)
AOOTA$AO[which(AOOTA$AO=="43" | AOOTA$AO=="44")] = "43+"
AOOTA$OTA = gsub('[0-9]+',"",AOOTA$AO.OTA)
AOOTA$OTA = gsub('[[:punct:]]',"",AOOTA$OTA)
AOOTA = subset(AOOTA, select = c(ID,AO,OTA))
gustello = subset(dat, select = c(ID,GUSTILLO))
gustello$g = character(195)
gustello$g[which(gustello$GUSTILLO == "Closed")] = "closed"
gustello$g[which(gustello$GUSTILLO == "Open I")] = "I-II"
gustello$g[which(gustello$GUSTILLO == "Open II")] = "I-II"
gustello$g[which(gustello$GUSTILLO == "Open IIIA")] = "III"
gustello = subset(gustello,select = c(ID,g))
TSCHERNE = subset(dat, select = c(ID,TSCHERNE))
TSCHERNE$t = gsub("\\:.*","",TSCHERNE$TSCHERNE)
TSCHERNE$t = gsub("Grade ","",TSCHERNE$t)
TSCHERNE$t2 = character(195)
TSCHERNE$t2[which(TSCHERNE$t== "")] = "open"
TSCHERNE$t2[which(TSCHERNE$t == "C0")] = "C0-CI"
TSCHERNE$t2[which(TSCHERNE$t == "CI")] = "C0-CI"
TSCHERNE$t2[which(TSCHERNE$t == "CII")] = "CII-CIII"
TSCHERNE$t2[which(TSCHERNE$t == "CIII")] = "CII-CIII"
tscherne = subset(TSCHERNE,select = c(ID,t2))
muscle = subset(dat, select = c(ID,X5..Muscle))
muscle$m = as.numeric(as.factor(muscle$X5..Muscle))
dat2 = read.csv("~/Dropbox/Shared Folder/Data Management - post data to share here by date/Panel Data/questionnaires-2017_01_11.csv")
load("~/Dropbox/Shared Folder/PACS Concordance/us.rda")
dat2 = subset(dat2, User %in% us)
bmi = subset(dat2, select = c(Study.ID, patientCharacter4))
bmi$BMI = gsub('[A-Z]+',"",bmi$patientCharacter4)
bmi$BMI = as.numeric(gsub(':',"",bmi$BMI))
bmi = unique(bmi)
bmi$ID = gsub("PAC-","",bmi$Study.ID)
bmi = subset(bmi, select = c(ID,BMI))
bmi$BMICat = character(nrow(bmi))
# bmi$BMICat = ifelse(bmi$BMI <15, "VSU", bmi$BMICat)
# bmi$BMICat = ifelse(bmi$BMI >=15 & bmi$BMI <16, "SU", bmi$BMICat)
#bmi$BMICat = ifelse(bmi$BMI >=16 & bmi$BMI <18.5, "1", bmi$BMICat)
bmi$BMICat = ifelse(bmi$BMI <30, "<30", bmi$BMICat) #underweight and normal
bmi$BMICat = ifelse(bmi$BMI >=30 & bmi$BMI <45, "30-45", bmi$BMICat) #overweight
bmi$BMICat = ifelse(bmi$BMI >=30 & bmi$BMI <35, "3", bmi$BMICat) #obeseI
bmi$BMICat = ifelse(bmi$BMI >=35,"4", bmi$BMICat) #obese II III
dat3 = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre6/pacs_raceEthnicity.csv")
race = dat3
race$race = as.character(race$race)
race$race2 = ifelse(race$race %in% c("Hispanic","Other race-ethnicity"), "other",race$race)
race = subset(race, select = c(ID,race2))
names(race)[2] = "race"
charc = subset(dat, select = c(ID,Skin.Pigmentation,
X.Hematoma,X.Abrasion))
names(charc) = c("ID","pigmen","hematoma","abrasion")
for(i in 2:4){
charc[,i] = as.character(charc[,i])
}
charc$pig[which(charc$pigmen=="")] = "Missing"
charc$pig[which(charc$pigmen=="Dark")] = "D&M"
charc$pig[which(charc$pigmen=="Medium")] = "D&M"
charc$pig[which(charc$pigmen=="Light")] = "Light"
charc$hematoma[which(charc$hematoma=="")] = "Missing"
charc$abrasion[which(charc$abrasion=="")] = "Missing"
cov = merge(x = AOOTA, y = gustello, all.x = T)
cov = merge(x = cov, y = tscherne, all.x = T)
cov = merge(x = cov, y = charc, all.x = T)
cov = merge(x = cov, y = bmi, all.x = T)
cov = merge(x = cov, y = race, all.x = T)
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/write up3/cohort1.rda")
id = union(oxy$ID,pre$ID)
cov = subset(cov, ID %in% id)
sum(cov <30)
sum(cov$BMI <30)
sum(cov$BMI <30)/nrow(cov)
sum(cov$BMI >=35)/nrow(cov)
sum(cov$BMI >=35)
sum(cov$BMI >=30 & cov$bmi < 35)
sum(cov$BMI >=30 & cov$BMI < 35)
34+39+112
34/185
table(cov$g~cov$t2)
table(cov$g,cov$t2)
View(cov)
cov$ID[which(cov$g == "closed")]
cov$ID[which(cov$g == "closed" & cov$t2 == "I-II")]
View(cov)
cov$ID[which(cov$t2 == "closed" & cov$g == "I-II")]
View(dat)
rm(list = ls())
dat = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre3/METRCPACS_DATA_LABELS_2016-12-17_1047.csv")
site = subset(dat,select = c(ID,Data.Access.Group))
site$site = substr(site$Data.Access.Group,1,3)
site$site2 = ifelse(site$site %in% c("BAM","DHA","HCM","WFU"),"Others",site$site)
site = subset(site, select = c(ID,site,site2))
AOOTA = subset(dat, select = c(ID,AO.OTA))
AOOTA$AO = substr(AOOTA$AO.OTA,1,2)
AOOTA$AO[which(AOOTA$AO=="43" | AOOTA$AO=="44")] = "43+"
AOOTA$OTA = gsub('[0-9]+',"",AOOTA$AO.OTA)
AOOTA$OTA = gsub('[[:punct:]]',"",AOOTA$OTA)
AOOTA = subset(AOOTA, select = c(ID,AO,OTA))
gustello = subset(dat, select = c(ID,GUSTILLO))
gustello$g = character(195)
gustello$g[which(gustello$GUSTILLO == "Closed")] = "closed"
gustello$g[which(gustello$GUSTILLO == "Open I")] = "I-II"
gustello$g[which(gustello$GUSTILLO == "Open II")] = "I-II"
gustello$g[which(gustello$GUSTILLO == "Open IIIA")] = "III"
gustello = subset(gustello,select = c(ID,g))
TSCHERNE = subset(dat, select = c(ID,TSCHERNE))
TSCHERNE$t = gsub("\\:.*","",TSCHERNE$TSCHERNE)
TSCHERNE$t = gsub("Grade ","",TSCHERNE$t)
TSCHERNE$t2 = character(195)
TSCHERNE$t2[which(TSCHERNE$t== "")] = "open"
TSCHERNE$t2[which(TSCHERNE$t == "C0")] = "C0-CI"
TSCHERNE$t2[which(TSCHERNE$t == "CI")] = "C0-CI"
TSCHERNE$t2[which(TSCHERNE$t == "CII")] = "CII-CIII"
TSCHERNE$t2[which(TSCHERNE$t == "CIII")] = "CII-CIII"
tscherne = subset(TSCHERNE,select = c(ID,t2))
muscle = subset(dat, select = c(ID,X5..Muscle))
muscle$m = as.numeric(as.factor(muscle$X5..Muscle))
dat2 = read.csv("~/Dropbox/Shared Folder/Data Management - post data to share here by date/Panel Data/questionnaires-2017_01_11.csv")
load("~/Dropbox/Shared Folder/PACS Concordance/us.rda")
dat2 = subset(dat2, User %in% us)
bmi = subset(dat2, select = c(Study.ID, patientCharacter4))
bmi$BMI = gsub('[A-Z]+',"",bmi$patientCharacter4)
bmi$BMI = as.numeric(gsub(':',"",bmi$BMI))
bmi = unique(bmi)
bmi$ID = gsub("PAC-","",bmi$Study.ID)
bmi = subset(bmi, select = c(ID,BMI))
bmi$BMICat = character(nrow(bmi))
# bmi$BMICat = ifelse(bmi$BMI <15, "VSU", bmi$BMICat)
# bmi$BMICat = ifelse(bmi$BMI >=15 & bmi$BMI <16, "SU", bmi$BMICat)
#bmi$BMICat = ifelse(bmi$BMI >=16 & bmi$BMI <18.5, "1", bmi$BMICat)
bmi$BMICat = ifelse(bmi$BMI <30, "<30", bmi$BMICat) #underweight and normal
bmi$BMICat = ifelse(bmi$BMI >=30 & bmi$BMI <45, "30-45", bmi$BMICat) #overweight
bmi$BMICat = ifelse(bmi$BMI >=30 & bmi$BMI <35, "3", bmi$BMICat) #obeseI
bmi$BMICat = ifelse(bmi$BMI >=35,"4", bmi$BMICat) #obese II III
dat3 = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre6/pacs_raceEthnicity.csv")
race = dat3
race$race = as.character(race$race)
race$race2 = ifelse(race$race %in% c("Hispanic","Other race-ethnicity"), "other",race$race)
race = subset(race, select = c(ID,race2))
names(race)[2] = "race"
charc = subset(dat, select = c(ID,Skin.Pigmentation,
X.Hematoma,X.Abrasion))
names(charc) = c("ID","pigmen","hematoma","abrasion")
for(i in 2:4){
charc[,i] = as.character(charc[,i])
}
charc$pig[which(charc$pigmen=="")] = "Missing"
charc$pig[which(charc$pigmen=="Dark")] = "D&M"
charc$pig[which(charc$pigmen=="Medium")] = "D&M"
charc$pig[which(charc$pigmen=="Light")] = "Light"
charc$hematoma[which(charc$hematoma=="")] = "Missing"
charc$abrasion[which(charc$abrasion=="")] = "Missing"
cov = merge(x = AOOTA, y = gustello, all.x = T)
cov = merge(x = cov, y = tscherne, all.x = T)
cov = merge(x = cov, y = charc, all.x = T)
cov = merge(x = cov, y = bmi, all.x = T)
cov = merge(x = cov, y = race, all.x = T)
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/write up3/cohort2.rda")
id = union(oxy$ID,pre$ID)
cov = subset(cov, ID %in% id)
View(cov)
rm(list = ls())
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/write up3/cohort2_beta.rda")
library(betareg)
oxy1$g = factor(oxy1$g, levels(factor(oxy1$g))[c(2,1,3)])
oxy1$race = factor(oxy1$race, levels(factor(oxy1$race))[c(2,1,3)])
oxy = subset(oxy1, hematoma != "Missing")
View(oxy)
rm(list = ls())
dat = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre3/METRCPACS_DATA_LABELS_2016-12-17_1047.csv")
View(dat)
rm(list = ls())
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/write up3/cohort2_beta.rda")
View(oxy1)
View(oxy1)
install.packages("foreign")
install.packages("accelerometery")
install.packages("accelerometry")
install.packages("nhanesaccel", repos = "http://R-Forge.R-project.org")
install.packages("tableone")
install.packages("survey")
mydata = cars
View(mydata)
mydata = mtcars
View(mydata)
mydata = mtcars[,c(1,4,5,6,7)]
d <- dist(mydata)
c
d
d = as.matrix(d)
View(d)
mydata = mtcars[,c(1,4,5,6,7)]
d <- dist(mydata)
p = as.matrix(d)
d = t(mydata)
View(d)
d = t(d) %*% d
View(d)
daig(1,1)
diag(1,1)
diag(1,2)
J = diag(1,32)
rep(1,32)
t(rep(1,32))*rep(1,32)
J = diag(1,32) - (1/32)*rep(1,32)%*%t(rep(1,32))
View(J)
matrix(rnorm(4),2)
matrix(rnorm(4),2)^2
0.4112555^2
xxx = matrix(rnorm(4),2)
xxx
xxx^2
-0.9810687^2
B = -0.5 * J %*% p^2 %*% J
View(B)
View(d)
#1. get the whiten matrix: goal of whiten is to achieve reduction
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
Y = scale(Y, center = T, scale = F)
tY = t(Y)
summary( prcomp(Y,center = F, scale. = F))
r1 = prcomp(Y,center = F, scale. = F)$rotation
r2 = prcomp(tY,center = F, scale. = F)$rotation
View(r1)
dim(r2)
View(r2)
k = 24
U = prcomp(tY,center = F, scale. = F)$rotation[,1:k]
M2 = cov(Y)
k = 11
U = prcomp(Y,center = F, scale. = F)$rotation[,1:k]
D = diag(eigen(M2)$values[1:k])
eigen(M2)$values
summary(prcomp(Y,center = F,scale. = F))
sqrt(1230651406)
pc = prcomp(Y,center = F,scale. = F)
pc$sdev
U = prcomp(tY,center = F, scale. = F)$rotation[,1:k]
D = diag((prcomp(tY,center = F, scale. = F)$sdev[1:k])^2)
U
D
View(D)
#1. get the whiten matrix: goal of whiten is to achieve reduction
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
Y = scale(Y, center = T, scale = F)
tY = t(Y)
G2 = Y %*% tY
summary( prcomp(tY,center = F, scale. = F))
k = 24
U = prcomp(tY,center = F, scale. = F)$rotation[,1:k]
D = diag((prcomp(tY,center = F, scale. = F)$sdev[1:k])^2)
library(MASS)
W = U %*% sqrt(ginv(D))
dim(W)
xx = t(W) %*% G2 %*% W
View(xx)
(prcomp(tY,center = F, scale. = F)$sdev[1:k])^2
View(xx)
prcomp(tY,center = F, scale. = F)$sdev
prcomp(Y,center = F, scale. = F)$sdev
k = 24
U = prcomp(Y,center = F, scale. = F)$rotation[,1:k]
D = diag((prcomp(Y,center = F, scale. = F)$sdev[1:k])^2)
W = U %*% sqrt(ginv(D))
xx = t(W)%*%cov(Y)%*%W
View(xx)
#1. get the whiten matrix: goal of whiten is to achieve reduction
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
Y = scale(Y, center = T, scale = F)
tY = t(Y)
G2 = Y %*% tY
summary( prcomp(tY,center = F, scale. = F))
k = 24
U = prcomp(tY,center = F, scale. = F)$rotation[,1:k]
D = diag((prcomp(tY,center = F, scale. = F)$sdev[1:k])^2)
gg = U %*% D %*% t(U)
View(gg)
View(G2)
#1. get the whiten matrix: goal of whiten is to achieve reduction
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
Y = scale(Y, center = T, scale = F)
tY = t(Y)
G2 = Y %*% tY
U = prcomp(tY,center = F, scale. = F)$rotation
D = diag((prcomp(tY,center = F, scale. = F)$sdev)^2)
library(MASS)
W = U %*% sqrt(ginv(D))
#1. get the whiten matrix: goal of whiten is to achieve reduction
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
Y = scale(Y, center = T, scale = F)
tY = t(Y)
G2 = Y %*% tY
U = prcomp(tY,center = F, scale. = F)$rotation
D = diag((prcomp(tY,center = F, scale. = F)$sdev)^2)
library(MASS)
W = U %*% sqrt(ginv(D))
tYp = tY %*% W
Y.list = split(tYp, seq(nrow(tYp)))
y0 = rep(0,dim(tYp)[2])
X3 = y0 %o% y0 %o% y0
for( i in 1:nrow(Yp)){
X3 = X3+ Y.list[[i]] %o% Y.list[[i]] %o% Y.list[[i]]
}
Y.list
for( i in 1:nrow(tYp)){
X3 = X3+ Y.list[[i]] %o% Y.list[[i]] %o% Y.list[[i]]
}
source("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/script/round4/Rob_TSM3.R")
source("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/script/round4/Rob_TSM3.R")
install.packages("far")
source("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/script/round4/Rob_TSM3.R")
Result_X3 = Rob_TSM(X3, L=25, N=25)
eigenl_3 = Result_X3$eigenl
eigenv_3 = Result_X3$eigenv
eigenl_recM3 = 1/eigenl_3^2
Wtinv = ginv(t(W))
eigenv_rec = Wtinv %*%  eigenv_3 %*% diag(eigenl_3)
Result_X3 = Rob_TSM(X3, L=50, N=50)
eigenl_3 = Result_X3$eigenl
eigenv_3 = Result_X3$eigenv
eigenl_recG3 = 1/eigenl_3^2
Wtinv = ginv(t(W))
eigenv_rec = Wtinv %*%  eigenv_3 %*% diag(eigenl_3)
eigenl_recG3 = rev(eigenl_recG3)
eigenv_recG3 = t(apply(eigenv_rec,1,rev))
dim(eigenv_recG3)
PhiG3 = eigenv_recG3
LambdaG3 = diag(eigenl_recG3)
LambdaG3
View(eigenv_recG3)
CordG3 = PhiG3 %*% sqrt(LambdaG3)
View(CordG3)
View(tY)
View(Y)
dim(CordG3)
View(G2)
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
tY = t(Y)
G2 = Y %*% tY
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
tY = t(Y)
G2 = Y %*% tY
View(Y)
View(tY)
#1. get the whiten matrix: goal of whiten is to achieve reduction
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
Y = scale(Y, center = T, scale = F)
tY = t(Y)
G2 = Y %*% tY
svdty = svd(tY)
v = svdty$v
dim(v)
U = prcomp(tY,center = F, scale. = F)$rotation
View(U)
View(v)
dim(svdty$d)
prcomp(tY,center = F, scale. = F)$sdev
#1. get the whiten matrix: goal of whiten is to achieve reduction
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
Y = scale(Y, center = T, scale = F)
prcomp(Y,center = F,scale. = F)$sdev
svd(Y)$d
xxx = eigen(Y)
xxx = eigen(Y)
xxx = eigen(cov(Y))
xxx$values
3011627.6^2
35080.641^2
3011627.6^2/7370
#1. get the whiten matrix: goal of whiten is to achieve reduction
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
Y = scale(Y, center = T, scale = F)
tY = t(Y)
G2 = Y %*% tY
U = prcomp(tY,center = F, scale. = F)$rotation
D = diag((prcomp(tY,center = F, scale. = F)$sdev)^2)
#1. get the whiten matrix: goal of whiten is to achieve reduction
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
Y = scale(Y, center = T, scale = F)
tY = t(Y)
G2 = Y %*% tY
U = prcomp(tY,center = F, scale. = F)$rotation
D = diag((prcomp(tY,center = F, scale. = F)$sdev)^2)
prcomp(tY,center = F, scale. = F)$sdev)^2
prcomp(tY,center = F, scale. = F)$sdev
(prcomp(tY,center = F, scale. = F)$sdev)^2
svd(tY)^2
svd(tY)$d
3011627.6^2/23
#1. get the whiten matrix: goal of whiten is to achieve reduction
rm(list = ls())
load("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/data/round3/hr.rda")
Y = hr[,-1]
Y = scale(Y, center = T, scale = F)
tY = t(Y)
G2 = Y %*% tY
U = prcomp(tY,center = F, scale. = F)$rotation
D = diag((prcomp(tY,center = F, scale. = F)$sdev)^2)
library(MASS)
W = U %*% sqrt(ginv(D))
#2. whiten and reduce tY and get G3
tYp = tY %*% W
Y.list = split(tYp, seq(nrow(tYp)))
#X3: whiten version of G3
y0 = rep(0,dim(tYp)[2])
X3 = y0 %o% y0 %o% y0
for( i in 1:nrow(tYp)){
X3 = X3+ Y.list[[i]] %o% Y.list[[i]] %o% Y.list[[i]]
}
#3. power tensor iteration
source("~/Dropbox/Junrui Di/MAMC/tensor decompostion analysis/script/round4/Rob_TSM3.R")
Result_X3 = Rob_TSM(X3, L=50, N=50)
eigenl_3 = Result_X3$eigenl
eigenv_3 = Result_X3$eigenv
eigenl_recG3 = 1/eigenl_3^2
Wtinv = ginv(t(W))
eigenv_rec = Wtinv %*%  eigenv_3 %*% diag(eigenl_3)
eigenl_recG3 = rev(eigenl_recG3)
eigenv_recG3 = t(apply(eigenv_rec,1,rev))
PhiG3 = eigenv_recG3
LambdaG3 = diag(eigenl_recG3)
CordG3 = PhiG3 %*% sqrt(LambdaG3)
eigenl_3
View(eigenv_3)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
