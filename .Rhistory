heatmap(VAR,Rowv = F,Colv = F)
hist(VAr)
hist(VAR)
plot(VAR,type = "h")
plot(VAR)
VAR
VAR = NULL
for(i in 1:(ncol(brain) - 1)){
for(j in (i+1) : ncol(brain)) {
x = brain[,i]
y = brain[,j]
nx = names(brain)[i]
ny = names(brain)[j]
logxy = log(x/y)
var.logxy = var(logxy)
VAR = c(VAR,var.logxy)
}}
plot(VAR)
VAR = NULL
NMS = NULL
for(i in 1:(ncol(brain) - 1)){
for(j in (i+1) : ncol(brain)) {
x = brain[,i]
y = brain[,j]
nx = names(brain)[i]
ny = names(brain)[j]
logxy = log(x/y)
var.logxy = var(logxy)
VAR = c(VAR,var.logxy)
NMS = c(NMS,paste0("log(",nx,"/",ny,")"))
}}
X = cbind(VAR,VAR)
View(X)
row.names(X) = NMS
heatmap(X,Rowv = NA,Colv = NA)
heatmap(X,Rowv = F,Colv = F)
heatmap(X)
View(X)
library(gplots)
heatmap.2(X)
heatmap.2(X,Rowv = NA,Colv = NA)
X = cbind(VAR)
row.names(X) = NMS
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none")
VAR = NULL
NMS = NULL
for(i in 1:(ncol(brain) - 1)){
for(j in (i+1) : ncol(brain)) {
x = brain[,i]
y = brain[,j]
nx = names(brain)[i]
ny = names(brain)[j]
logxy = log(x/y)
var.logxy = var(logxy)
VAR = c(VAR,var.logxy)
NMS = c(NMS,paste0("log(",nx,"/",ny,")"))
}}
X = cbind(VAR,VAR)
row.names(X) = NMS
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none")
heatmap(X,Rowv = NA,Colv = NA,dendrogram = "none")
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none")
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none",xlab = "")
VAR = NULL
NMS = NULL
for(i in 1:(ncol(brain) - 1)){
for(j in (i+1) : ncol(brain)) {
x = brain[,i]
y = brain[,j]
nx = names(brain)[i]
ny = names(brain)[j]
logxy = log(x/y)
var.logxy = var(logxy)
VAR = c(VAR,var.logxy)
NMS = c(NMS,paste0("log(",nx,"/",ny,")"))
}}
X = cbind(VAR,VAR)
colnames(X) = NULL
row.names(X) = NMS
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none")
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,trace = F)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,trace = NA)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,trace = NULL)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA)
par(mar=c(7,4,4,2)+0.1)
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=800, height=750)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA)
graphics.off()
par(mar=c(7,4,4,2)+0.1)
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=800, height=750)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA)
graphics.off()
par(mar=c(3,7,4,2)+0.1)
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=800, height=750)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA)
graphics.off()
par(mar=c(3,10,4,2)+0.1)
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=800, height=750)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA)
graphics.off()
par(mar=c(3,10,4,2)+0.1)
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=800, height=750)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA,cexRow=1,cexCol=1,margins=c(12,8),)
graphics.off()
rm(list = ls())
load("D:/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/ImputeData.rda")
#1. histogram
brain = ImputeData[,c(27:37)]
VAR = NULL
NMS = NULL
for(i in 1:(ncol(brain) - 1)){
for(j in (i+1) : ncol(brain)) {
x = brain[,i]
y = brain[,j]
nx = names(brain)[i]
ny = names(brain)[j]
logxy = log(x/y)
var.logxy = var(logxy)
VAR = c(VAR,var.logxy)
NMS = c(NMS,paste0("log(",nx,"/",ny,")"))
}}
X = cbind(VAR,VAR)
colnames(X) = NULL
row.names(X) = NMS
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=800, height=750)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA,cexRow=1,cexCol=1,margins=c(12,8),)
graphics.off()
library(gplots)
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=800, height=750)
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA,cexRow=1,cexCol=1,margins=c(12,8),)
graphics.off()
library(gplots)
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=15, height=17,res = 300,units = "in")
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA,cexRow=1,cexCol=1,margins=c(16,8))
graphics.off()
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=15, height=17,res = 300,units = "in")
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA,cexRow=1,cexCol=1,margins=c(8,8))
graphics.off()
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=15, height=17,res = 300,units = "in")
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA,cexRow=1,cexCol=1,margins=c(8,14))
graphics.off()
X = cbind(VAR,VAR)
colnames(X) = NULL
row.names(X) = NMS
library(gplots)
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=15, height=17,res = 300,units = "in")
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA,cexRow=1,cexCol=1,margins=c(8,16))
graphics.off()
library(gplots)
png(filename='D:/Dropbox/Junrui Di/Other papers/coda brain/results/heatmap_var.png', width=15, height=17,res = 300,units = "in")
heatmap.2(X,Rowv = NA,Colv = NA,dendrogram = "none", labCol = FALSE,tracecol=NA,cexRow=1,cexCol=1,margins=c(8,20))
graphics.off()
35859.44+390.62
View(brain)
(1.69^2) * (10^2)  * 2 / 1
(1.96^2) * (10^2)  * 2 / 1
(1.96^2) * (10^2)  * 2 / 1
qnorm(0.975,lower.tail = T)
qnorm(0.95,lower.tail = T)
1.64^2 * 100 *2 / 1
qnorm(0.90,lower.tail = T)
(1.28 + 1.96)^2 * 100 /1
(1.28 + 1.96)^2 * 100 *2/1
(1.28 + 1.96)^2 * 144 *2/1
(1.648 + 1.96)^2 * 144 *2/1
(1.64 + 1.96)^2 * 144 *2/1
qnorm(0.1,lower.tail = T)
(1.281552+1.959964)^2 * (10^2) * 2/1
(1.281552+1.959964)^2 * (12^2) * 2/1
(1.281552+1.959964)^2 * (10^2) * 2/2
(1.281552+1.959964)^2 * (10^2) * 2/4
qnorm(0.2,lower.tail = T)
install.packages("PTAk")
library(PTAk)
don <- array(1:360,c(5,4,6,3))
don <- don + rnorm(360,1,2)
xx = CANDPARA(don, dim = 3)
vv = xx[[1]]$v
t(vv) %*% vv
subject <- faces_tnsr[,,14,]
cpD <- cp(subject,num_components=10)
library(rTensor)
subject <- faces_tnsr[,,14,]
cpD <- cp(subject,num_components=10)
cpD$lambdas
subject <- faces_tnsr[,,14,]
cpD <- cp(subject,num_components=10)
cpD$lambdas
?cp
library(tensr)
install.packages("tensr")
library(tensr)
aa = random_ortho(10)
t(aa) %*% aa
aa
aa = random_ortho(10)[[1]]
t(aa) %*% aa
x <- c(3, 6, 2, 4, 1)
topK(x, 3)
topK(x,3)
tensr::topK(x,3)
random_ortho()
random_ortho
install.packages(c("callr", "knitr", "pracma", "tidyr"))
library(actigraphy)
data(example_activity_data)
count = example_activity_data$count
wear = example_activity_data$wear
frag = fragmentation_long(count.data = count, weartime= wear, thresh = 100, bout.length = 1, metrics = "mean_bout",
by = "day" )
ata(example_activity_data)
count.data = example_activity_data$count
extcos = ExtCos_long(count.data = count.data, logtransform  = TRUE)
ata(example_activity_data)
count.data = example_activity_data$count
data(example_activity_data)
count.data = example_activity_data$count
ExtCos_long(count.data, longtrasform = TRUE)
remotes::install_github("junruidi/actigraphy")
devtools::install_github("junruidi/actigraphy")
library(actigraphy)
(59+115+156+268+329+431+448+477+638+803+855+1040+1106)
6/6725
(59+115+156+268+329+431+638)
7/1996
59+114+156+268+329+431+638
7/423
9+13+13+18+23+28+31+34+45+48+161
7/6725
2.45/3.67
1.96^2 * 0.114 *0.162/0.02^2
1.96^2 * (1-0.114) * 0.114 *0.162 * (1-0.162)/0.02^2
1.96^2 * (1-0.114) * 0.114 /0.02^2
install.packages(c("BH", "callr", "ddalpha", "devtools", "lubridate", "PoisNor", "quantreg", "RcppEigen", "survminer", "tseries", "viridis"))
install.packages("XML")
demo()
is.things
is.things
licence()
install.packages(c("dbplyr", "forcats", "stringr", "XML"))
library(actigraphy)
devtools::install_github("junruidi/actigraphy")
library(actigraphy)
library(actigraphy)
load("D:/Dropbox/BLSA Mortality/data/processed/50older.rda")
library(actigraphy)
load("D:/Dropbox/BLSA Mortality/data/processed/50older.rda")
rm(list = c("cov50","surv50"))
names(act50)
act50$ID = act50$visit = act50$X = NULL
names(act50)
names(act50) = c("ID","Day",paste0("MIN",c(1:1440)))
names(act50)
crfpca
fpca = crfpca(count.data = act50, knots = 20,
pve = 0.9, logtransform  = TRUE)
count.data = act50
count.data[, 2:1442] = log(count.data[, 2:1442] + 1)
devtools::install_github("junruidi/actigraphy")
library(actigraphy)
load("D:/Dropbox/BLSA Mortality/data/processed/50older.rda")
rm(list = c("cov50","surv50"))
act50$ID = act50$visit = act50$X = NULL
names(act50) = c("ID","Day",paste0("MIN",c(1:1440)))
fpca = crfpca(count.data = act50, knots = 20,
pve = 0.9, logtransform  = TRUE)
data(example_activity_data)
count1 = c(t(example_activity_data$count[1,-c(1,2)]))
wear1 = c(t(example_activity_data$wear[1,-c(1,2)]))
id = example_activity_data$count$ID[1]
day= example_activity_data$count$Day[1]
plot_profile(x=count1, w=wear1, title = paste0("ID ",id, ", Day  ", day),cex.main = 1.3,cex.lab = 1.2, cex.xaxis = 1,cex.yaxis = 1,hr = 2)
data(example_activity_data)
count1 = c(t(example_activity_data$count[1,-c(1,2)]))
wear1 = c(t(example_activity_data$wear[1,-c(1,2)]))
id = example_activity_data$count$ID[1]
day= example_activity_data$count$Day[1]
plot_profile(x=count1, w=wear1, title = paste0("ID ",id, ", Day  ", day),cex.main = 1.3,cex.lab = 1.2, cex.xaxis = 1,cex.yaxis = 1,hr = 2)
data(example_activity_data)
count1 = c(t(example_activity_data$count[1,-c(1,2)]))
wear1 = c(t(example_activity_data$wear[1,-c(1,2)]))
tst = Time(x = count1, w = wear1, thresh = 100,smallerthan = TRUE)
tat = Time(x = count1, w = wear1, thresh = 100,smallerthan = FALSE)
tst
tat
data(example_activity_data)
count = example_activity_data$count
wear = example_activity_data$wear
sed_all = Time_long(count.data = count,weartime = wear,
thresh = 100,smallerthan = TRUE)
View(sed_all)
data(example_activity_data)
count1 = c(t(example_activity_data$count[1,-c(1,2)]))
wear1 = c(t(example_activity_data$wear[1,-c(1,2)]))
mb = fragmentation(x = count1, w = wear1, thresh = 100, metrics = "mean_bout")
tp = fragmentation(x = count1, w = wear1, thresh = 100, metrics = "TP")
mb = fragmentation(x = count1, w = wear1, thresh = 100, metrics = "mean_bout", bout.length = 1)
mb
tp = fragmentation(x = count1, w = wear1, thresh = 100, metrics = "TP",bout.length = bout.length = 1)
tp = fragmentation(x = count1, w = wear1, thresh = 100, metrics = "TP",bout.length = 1)
tp
1/2.875
devtools::install_github("junruidi/actigraphy")
library(actigraphy)
data(example_activity_data)
count1 = c(t(example_activity_data$count[1,-c(1,2)]))
wear1 = c(t(example_activity_data$wear[1,-c(1,2)]))
mb = fragmentation(x = count1, w = wear1, thresh = 100, metrics = "mean_bout")
tp = fragmentation(x = count1, w = wear1, thresh = 100, metrics = "TP")
mb
tp
data(example_activity_data)
count = example_activity_data$count
wear = example_activity_data$wear
frag_by_subject = fragmentation_long(count.data = count, weartime = wear,thresh = 100, metrics = "all",by = "subject")
frag_by_day = fragmentation_long(count.data = count, weartime = wear,thresh = 100, metrics = "all",by = "day")
devtools::install_github("junruidi/actigraphy")
library(actigraphy)
data(example_activity_data)
count = example_activity_data$count
wear = example_activity_data$wear
frag_by_subject = fragmentation_long(count.data = count, weartime = wear,thresh = 100, metrics = "all",by = "subject")
frag_by_day = fragmentation_long(count.data = count, weartime = wear,thresh = 100, metrics = "all",by = "day")
View(frag_by_day)
count.days.simu = rpois(1440*5, lambda = 5)
extcos = ExtCos(x = count.days.simu, logtransform  = TRUE)
extcos
data(example_activity_data)
count.data = example_activity_data$count
extcos = ExtCos_long(count.data = count.data, logtransform  = TRUE)
View(extcos)
data(example_activity_data)
count1 = c(t(example_activity_data$count[1,-c(1,2)]))
iv = IV(x = count1, level = "hour")
iv
data(example_activity_data)
count.data = example_activity_data$count
iv_all = IV_long(count.data = count.data, level = "minutes")
data(example_activity_data)
count.data = example_activity_data$count
iv_all = IV_long(count.data = count.data, level = "minute")
View(iv_all)
load("D:/Dropbox/BLSA Mortality/data/analysis/survival_ready.rda")
View(surv)
library(actigraphy)
load("D:/Dropbox/BLSA Mortality/data/processed/50older.rda")
rm(list = c("cov50","surv50"))
act50$ID = act50$visit = act50$X = NULL
names(act50) = c("ID","Day",paste0("MIN",c(1:1440)))
fpca = crfpca(count.data = act50, knots = 20,
pve = 0.9, logtransform  = TRUE)
data(example_activity_data)
count = example_activity_data$count
wear = example_activity_data$wear
tac = Tvol(count.data = count,weartime = wear,logtransform = FALSE)
tlac = Tvol(count.data = count,weartime = wear,logtransform = TRUE)
tac
tlac
data(example_activity_data)
count1 = c(t(example_activity_data$count[1,-c(1,2)]))
wear1 = c(t(example_activity_data$wear[1,-c(1,2)]))
tst = Time(x = count1, w = wear1, thresh = 100,smallerthan = TRUE)
tat = Time(x = count1, w = wear1, thresh = 100,smallerthan = FALSE)
tst
tat
data(example_activity_data)
count = example_activity_data$count
wear = example_activity_data$wear
sed_all = Time_long(count.data = count,weartime = wear,
thresh = 100,smallerthan = TRUE)
sed_all
data(example_activity_data)
count = example_activity_data$count
wear = example_activity_data$wear
frag_by_subject = fragmentation_long(count.data = count, weartime = wear,thresh = 100, metrics = "all",by = "subject")
frag_by_day = fragmentation_long(count.data = count, weartime = wear,thresh = 100, metrics = "all",by = "day")
frag_by_day
frag_by_subject
scores = fpca$pcs
scores
fragmentation
fragmentation_long
install.packages(c("knitr", "pillar", "rlang", "timeDate", "XML"))
install.packages("tidyselect")
install.packages("yaml")
load("D:/Dropbox/inhealth/data/time/time.rda")
View(fb_onoff)
View(fb_cg)
View(at_onoff)
exp(-0.8627836)
id_mri = list.files("D:/",pattern = (.csv))
id_mri = list.files("D:/",pattern = ".csv")
id_mri = list.files("D:/BLSA_Final Dataset_MRI_Rest/",pattern = ".csv")
id_cong = list.files("D:/BLSA_Final Dataset_Cognitive_Rest/",pattern = ".csv")
id_all = list.files("D:/BLSA Epoch by Epoch_Mar2018/",pattern = ".csv")
id_mricong = union(id_all,id_cong)
382+129
id`` = list.files("D:/BLSA Epoch by Epoch_Mar2018/",pattern = ".csv")
id1 = list.files("D:/BLSA Epoch by Epoch_Mar2018/",pattern = ".csv")
id2 = list.files("D:/Dropbox/Junrui Di/BLSA/actiwatch/Epoch_Mar18/raw/",pattern = ".csv")
sum(id1 != id2)
id1[which(id1 != id2)]
id2[which(id1 != id2)]
install.packages(c("gender", "hms", "httpuv", "igraph", "lubridate", "openssl", "qdapDictionaries", "seewave", "selectr", "sfsmisc", "yaml"))
-0.2831358+0.629075
exp(0.3459392)
1/1.413317
1.96^2 * (3.9^2+3.6^2)
qnorm(0.1, lower.tail = T)
qnorm(0.1, lower.tail = F)
(1.96+1.28)^2*(3.9^2+3.6^2)
qnorm(0.q, lower.tail = F)
qnorm(0.2, lower.tail = F)
install.packages(c("bindr", "igraph", "Rcpp", "scatterplot3d", "stringdist", "stringi", "survey"))
license()
install.packages(c("bindrcpp", "broom", "carData", "caret", "curl", "effects", "lava", "lme4", "mapdata", "plogr", "randomForest", "selectr", "viridis"))
install.packages("psych")
rm(list = ls())
#original data
ori = read.csv("D:/Dropbox/Shared Folder/Data Management - post data to share here by date/Panel Data/questionnaires-2017_01_23.csv",as.is = T,stringsAsFactors = F,na.strings=c("","-","NA"))
load("D:/Dropbox/Shared Folder/PACS Concordance/us.rda")
load("D:/Dropbox/Junrui Di/PACS Modeling/outcome/old files no rescore/outcome.rda")
us = as.character(us)
outcome = subset(outcome,select = c(ID,group1))
data = ori[which(ori$User %in% us & ori$Part == 2),]
data = subset(data, Study.ID %in% outcome$ID)
data$Likelihood = as.numeric(gsub("%","",data$Likelihood))/100
data$Reviewer = character(849)
data$Reviewer[which(data$User == "Andrew.Schmidt@hcmed.org")] = "AS"
data$Reviewer[which(data$User == "daniel.stinner@gmail.com")] = "DS"
data$Reviewer[which(data$User == "david.hak@dhha.org")] = "DH"
data$Reviewer[which(data$User == "ecarroll@wakehealth.edu")] = "EC"
data$Reviewer[which(data$User == "madhav.karunakar@carolinashealthcare.org")] = "MK"
data$Reviewer[which(data$User == "Michael.Bosse@carolinashealthcare.org")] = "MB"
data$Reviewer[which(data$User == "roman_hayda@brown.edu")] = "RH"
data$Reviewer[which(data$User == "rotoole@umoa.umm.edu")] = "RO"
data$Reviewer[which(data$User == "william.obremskey@Vanderbilt.Edu")] = "WO"
dat = subset(data, select = c(Study.ID,Reviewer,Likelihood,Benefit.from,Performed))
dat$Study.ID = as.numeric(gsub("PAC-","",dat$Study.ID))
names(dat)[1] = "ID"
dat$Benefit.from = ifelse(dat$Benefit.from == "Yes",1,0)
dat$Performed = ifelse(dat$Performed == "Yes",1,0)
file.loc = "D:/Dropbox/Shared Folder/PACS Concordance/0301/rescore Jan31.csv"
new = read.csv(file.loc, header = T,stringsAsFactors = F)
file.loc2 = "D:/Dropbox/Shared Folder/PACS Concordance/concordancenew/rescore Aug 29.csv"
new.new = read.csv(file.loc2, header = T,stringsAsFactors = F)
names(new)[1] = "ID"
new$ID = as.numeric(gsub("PAC-","",new$ID))
new = new[,c(1,2,3,4,6,7)]
new.new = new.new[,c(1,2,3,4,6,7)]
names(new.new)[1] = "ID"
factors2 = rbind(new.new, new)
factors2$Likelihood = factors2$Likelihood/100
factors2 = subset(factors2, ID %in% dat$ID)
names(factors2)[c(3,5,6)] = c("Change","Benefit.from", "Performed")
factors3 = factors2[which(is.na(factors2$Change) | factors2$Change == 1),]
factors3$Change = NULL
dat$idcheck = paste(dat$ID,data$Reviewer)
factors3$idcheck = paste(factors3$ID,factors3$Reviewer)
check_remain = dat[which(dat$idcheck %in% factors3$idcheck),]
dat = dat[-which(dat$idcheck %in% factors3$idcheck),]
dat$idcheck = factors3$idcheck = NULL
dat$comment = "original"
factors3$comment = "rescore"
alldata = rbind(dat, factors3)
alldata = alldata[order(alldata$ID),]
#####################################################
score = subset(alldata, select = c(ID,Likelihood))
library(dplyr)
score_g = group_by(score,ID)
sc = summarise(score_g,likelihood = median(Likelihood,na.rm = T))
sc$group1 = "Low"
sc$group1[which(sc$likelihood>0.3 & sc$likelihood<=0.7)] = "Medium"
sc$group1[which(sc$likelihood>0.7)] = "High"
#2. fasciotomy cases
fac_id = c(1003,1530,1558,1560,1568,1642,1648,2706,2805,2838,2841,2858,2895,4022,4038,5507,5531,5546,5595,5702,5703,5704,5711,5717)
fac_c = data.frame(ID = sc$ID)
fac_c$fac1 = 0
fac_c$fac1[which(fac_c$ID %in% fac_id)] = 1
#3. fasciotomy perform suggestions
fac_perf = subset(alldata, select = c(ID,Performed ))
tab = table(fac_perf$ID,fac_perf$Performed)
fac_p = data.frame(ID = row.names(tab))
fac_p$fac2 = 1
fac_p$fac2[which(tab[,1] > tab[,2])] = 0
#4. fasciotomy benefit from
fac_benefit = subset(alldata, select = c(ID,Benefit.from))
tab = table(fac_benefit$ID,fac_benefit$Benefit.from)
fac_b = data.frame(ID = row.names(tab))
fac_b$fac3 = 1
fac_b$fac3[which(tab[,1] > tab[,2])] = 0
outcome = merge(x = sc, y = fac_c)
outcome = merge(x = outcome, y = fac_p)
outcome = merge(x = outcome, y = fac_b)
View(outcome)
install.packages(c("car", "glmnet", "lme4", "lmtest", "maps", "selectr"))
(167+114)*6
166*6
1140/6
110+195
498.65/12
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("D:/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
