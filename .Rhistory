}
acti = mat
act = rbind(act,acti)
}
n.day = length(dat.list)
act = as_tibble(matrix(act$Activity,ncol = 1440,byrow = T))
names(act) = c(paste0("MIN",c(1:1440)))
act = act %>% mutate(ID = id.i,
Date = as.character(min(dat.i$Date)+c(0:(n.day-1))))
act$Seq = (1:nrow(act))
act = act[,c(1441:1443,1:1440)]
Activit_Data_Wide = rbind(Activit_Data_Wide,act)
}
1440 * (60 / epochSizeSeconds)
epochSizeSeconds=5
1440 * (60 / epochSizeSeconds)
N = 1440 * (60 / epochSizeSeconds)
time = seq(1 / N, 7, by = 1 / N)
time
1440 / N
ActCR::RA
48+42+34+14+7
48+42+34+14+7+25
49+42+34+25+7+14
398.04 + 112.32 + 969.89 + 2740.78+345.25+765.85+1270.22+898.88
4600 +2036
4600 +2036 +397.04
7033.04 + 2740 + 500
7033.04 + 2740 + 500+1432
4600 +2036 +397.04 + 2740 + 500 + 1432
4600 +2036 +397.04 + 2740 + 500 + 1432 + (900)
40000/12
35000 + 12000
library(devtools)
install.packages("devtools")
60*2+15
150
135*2
150 + 60*0.85
135*3
150 + 0.85*60*2
install.packages(c("bslib", "htmltools", "rlang", "sass", "stringi"))
install.packages(c("MASS", "nlme"), lib="/Library/Frameworks/R.framework/Versions/4.2/Resources/library")
install.packages(c("MASS", "nlme"), lib="/Library/Frameworks/R.framework/Versions/4.2/Resources/library")
x = 1:10
y = 1:10
plot(x, y ,col = "red")
plot(x, y ,col = "blue")
plot(x, y ,col = "green", type = "l")
plot(x, y ,col = "green", type = "b")
plot(x, y ,col = "yellow", type = "b", lwd = 3)
x = 1:10
y = x^2 + x + 2
plot(x, y ,col = "red", type = "b", lwd = 3)
plot(x, y ,col = "yeloow", type = "b", lwd = 3)
plot(x, y ,col = "yellow", type = "b", lwd = 3)
plot(x, y ,col = "blue", type = "b", lwd = 3)
x = -20 : 20
y = x^2 + x + 2
plot(x, y ,col = "blue", type = "b", lwd = 3)
y = sin(3x) + x^2  + log(x) + sqrt(x)+3
y = sin(3*x) + x^2  + log(x) + sqrt(x)+3
y = sin(3*x) + x^2  +3
plot(x, y ,col = "blue", type = "b", lwd = 3)
y = sin(3*x) + x^2  + log(x) + sqrt(x)+3
dfklasdlfjkalsjfa
dfasdf
ads
fdas
f
das
fdas
f
sa
fas
df
das
fd
asf
das
f
dsaf
das
f
saf
dsa
f
saf
ads
fd
asf
asd
fasd
install.packages(c("evaluate", "knitr", "rlang", "rmarkdown", "stringr", "tinytex", "xfun"))
install.packages(c("cluster", "MASS", "Matrix", "nlme", "survival"), lib="/Library/Frameworks/R.framework/Versions/4.2/Resources/library")
library(tidyverse)
install.packages("tidyverse")
install.package(dslabs)
install.packages(dslabs)
install.packages("dslabs")
library(tidyverse)
library(dslabs)
nested = gapminder %>% groupb_by(country) %>% nest()
nested = gapminder %>% group_by(country) %>% nest()
View(nested)
View(nested[[2]][[1]])
install.packages("tidymodels")
library(tidymodels)
70/(100)
library(tidymodels)
?decision_tree
?vfold_cv
install.packages(baguette)
install.packages("baguette")
library(baguette)
?bag_tree
?boost_tree
?e1071::svm
install.packages("e1071")
?e1071
?e1071::svm
install.packages("BEST")
library(best)
library(BEST)
install.packages("HDInvterval")
install.packages("rjags")
library(BEST)
library(rjags)
?tidyverse::glimbps
?tidyverse::glimps
?tidyverse::glimpse
library(tidyverse)
?glimpse
hyperparams <- expand.grid(n.trees = 200,
interaction.depth = 1,
shrinkage = 0.1,
n.minobsinnode = 10)
hyperparams
library("mlr")
install.packages("mlr")
library(mlr)
install.packages("mlr3")
library(mlr)
getParamSet("classify.h2o.deeplearning")
getParamSet("classif.h2o.deeplearning")
install.packages("h20")
install.packages("h2o")
getParamSet("classif.h2o.deeplearning")
library(h2o)
?h2o.deeplearning
?h2o.automl
install.packages("rstanarm")
install.packages("rstanarm")
library(rstanarm)
install.packages("benchmarkme")
library(benchmarkme)
res = benchmark_std(runs = 3)
plot(res)
library(parallel)
detectCores()
library(benchmarkme)
get_cpu()
lubridate::now()
Sys.timezone()
library(lubridate)
?force_tz
library(ggplot2)
?scale_x_date
x = Aug 31, 2013
x = "Aug 31, 2013"
x
parse_date(x,format = "%b %d, %z")
mdy(x)
?make_date
parse_date(x,format = "%b %d, %Y")
library(lurbidate)
library(lubridate)
parse_date(x,format = "%b %d, %Y")
parse_date_time(x,format = "%b %d, %Y")
?parse_date_time
strptime(x,format = "%b %d, %Y")
x
parse_date_time(x, format = "%b %d, %Y")
parse_date_time(x, oder = "%b %d, %Y")
parse_date_time(x, orders = "%b %d, %Y")
parse_date_time(x, orders = "bdY")
x <- "Monday June 1st 2010 at 4pm"
parse_date_time(x, orders = "AmdyIp")
paste(c("a","n"",c))
d
"
paste(c("a","n"","c""))
paste(c("a","n"","c"))
paste(c("a","n","c"))
paste(c("a","n","c"),"xx")
both_names <- c("Box, George", "Cox, David")
# Split both_names into first_names and last_names
both_names_split <- str_split(both_names, ", ", simplify = T)
library(stringr)
both_names <- c("Box, George", "Cox, David")
# Split both_names into first_names and last_names
both_names_split <- str_split(both_names, ", ", simplify = T)
both_names_split
x = c("cat","coat","scotland", "tic toc")
str_view(c("cat", "coat", "scotland", "tic toc"),
pattern = "c" %R% ANY_CHAR %R% "t")
library(rebus)
install.packages("rebus")
library(rebus)
str_view(c("cat", "coat", "scotland", "tic toc"),
pattern = "c" %R% ANY_CHAR %R% "t")
x <- c("cat", "coat", "scotland", "tic toc")
pattern <- "c" %R% ANY_CHAR %R% "t"
str_detect(x, pattern)
str_subset(x, pattern)
str_count(x, pattern)
str_extract(x, pattner)
str_extract(x, pattern)
?read:read_csv
?read:read_csv
library(readxl)
?t.test
?sample
sample(1:6,5,replace = T)
pbinom
(
2
, 10,
library(ggplot2)
?geom_point
?ggsave
?ggtitle
?scale_color_manual
?geom_errorbar
?facet_grid
?geom_smooth
library(readr)
numbers_as_chars <- c("1000", "10.2", "178")
parse_number(numbers_as_chars)
library(lubridate)
library(tidyr)
?replace_na
library(dplyr)
?bind_rows
library(readxl)
?read_excel
library(stringr)
?readr::read_csv
?pivot_wider
?geom_jitter
?stat_quantile
rm(list = ls())
rm(list = ls())
library(readxl)
library(tidyverse)
library(lubridate)
dat = read_xlsx("~/Downloads/Example file1.xlsx")
View(dat)
dat = read_xlsx("~/Downloads/Example file1.xlsx",skip = 33)
View(dat)
dat = read_xlsx("~/Downloads/Example file1.xlsx",skip = 32)
View(dat)
dat = read_xlsx("~/Downloads/Example file1.xlsx",skip = 34)
View(dat)
dat = read_xlsx("~/Downloads/Example file1.xlsx")
View(dat)
View(dat)
names(dat)
View(dat)
View(dat)
dat = read_xlsx("~/Downloads/Example file1.xlsx") %>%
mutate(TimeStamp = ymd_hms(paste(Date,str_replace_all("1899-12-31 "))))
dat = read_xlsx("~/Downloads/Example file1.xlsx") %>%
mutate(TimeStamp = ymd_hms(paste(Date,str_replace_all("1899-12-31 ", Time, ""))))
Date = dat$Date
Time = dat$Time
ymd_hms(paste(Date,str_replace_all("1899-12-31 ", Time, "")))
gsub("1899012031 ","",Time)
gsub("1899-12-31 ","",Time)
dat = read_xlsx("~/Downloads/Example file1.xlsx") %>%
mutate(TimeStamp = ymd_hms(paste(Date,str_replace_all("1899-12-31 ", "", Time))))
dat = read_xlsx("~/Downloads/Example file1.xlsx") %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time))))
View(dat)
diff(dat$TimeStamp)
table(diff(dat$TimeStamp))
n_day1 = sum(dat$Day == 1)
n_day1
n_last_day = sum(dat$Day == max(dat$Day))
rm(list = ls())
library(readxl)
library(tidyverse)
library(lubridate)
dat = read_xlsx("~/Downloads/Example file1.xlsx") %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time))))
n_first_day = sum(dat$Day == 1)
n_last_day = sum(dat$Day == max(dat$Day))
View(dat)
rm(list = ls())
library(readxl)
library(tidyverse)
library(lubridate)
dat = read_xlsx("~/Downloads/Example file1.xlsx")
View(dat)
dat = read_excel("~/Downloads/Example file1.xlsx")
View(dat)
dat = read_excel("~/Downloads/Example file1.xlsx",sheet = 1) %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time)))) %>%
select(Day,TimeStamp,TimeStamp)
View(dat)
dat = read_excel("~/Downloads/Example file1.xlsx",sheet = 1) %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time)))) %>%
select(Day,Activity,TimeStamp)
View(dat)
table(diff(dat$TimeStamp))
n_first_day = sum(dat$Day == 1)
n_last_day = sum(dat$Day == max(dat$Day))
n_first_day
n_last_day
View(dat)
patch_top = tibble(Day = rep(1, 1440 - n_first_day), Activity = rep(NA, 1440 - n_first_day), TimeStamp = rep(NA, 1440 - n_first_day))
patch_top = tibble(Day = rep(1, 1440 - n_first_day),
Activity = rep(NA, 1440 - n_first_day),
TimeStamp = rep(NA, 1440 - n_first_day))
patch_bottom = tibble(Day = rep( max(dat$Day), 1440 - n_first_day),
Activity = rep(NA, 1440 - n_first_day),
TimeStamp = rep(NA, 1440 - n_first_day))
View(patch_bottom)
View(patch_top)
View(dat)
rm(list = ls())
library(readxl)
library(tidyverse)
library(lubridate)
## The following code is based on 60-sec epoch data
## 1. Read in the excel file
dat = read_excel("~/Downloads/Example file1.xlsx",sheet = 1) %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time)))) %>%
select(Day,Activity,TimeStamp)
table(diff(dat$TimeStamp)) ## this confirms that the data in this file is continuous with no gap
# 1
# 11348
## 2. Patch the timepoints in first day before device started, and timepoints in last day after device terminated
n_first_day = sum(dat$Day == 1)
n_last_day = sum(dat$Day == max(dat$Day))
patch_top = tibble(Day = rep(1, 1440 - n_first_day),
Activity = rep(NA, 1440 - n_first_day),
TimeStamp = rep(NA, 1440 - n_first_day))
patch_bottom = tibble(Day = rep( max(dat$Day), 1440 - n_last_day),
Activity = rep(NA, 1440 - n_last_day),
TimeStamp = rep(NA, 1440 - n_last_day))
dat_patched = patch_top %>% bind_rows(dat) %>% bind_rows(patch_bottom)
View(dat_patched)
9*1440
View(dat_patched)
wide = matrix(dat_patched$Activity, ncol = 1440, byrow = T)
View(wide)
View(wide)
1440-200
## 3. Conver the long data into wide format
wide = matrix(dat_patched$Activity, ncol = 1440, byrow = T) %>% as_tibble()
View(wide)
names(wide) = paste0("MIN",c(1:1440))
names(wide)
id_cols = tibble(ID = "idnumber", Day = unique(dat$Day),Date = unique(date(TimeStamp)))
id_cols = tibble(ID = "idnumber", Day = unique(dat$Day),Date = unique(dat$TimeStamp))
id_cols = tibble(ID = "idnumber", Day = unique(dat$Day),Date = unique(date(dat$TimeStamp)))
View(id_cols)
wide_data = id_cols %>% bind_cols(wide)
View(wide_data)
rowSums(is.na(wide))
rowSums(is.nan(wide))
is.na(widce)
View(wide_data)
View(dat)
View(dat_patched)
dat = read_excel("~/Downloads/Example file1.xlsx",sheet = 1) %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time))))
glimpse(dat)
dat = read_excel("~/Downloads/Example file1.xlsx",sheet = 1) %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time)))) %>%
select(Day,Activity,`Off-Wrist`,TimeStamp)
View(dat)
View(dat)
View(dat)
rm(list = ls())
library(readxl)
library(tidyverse)
library(lubridate)
## The following code is based on 60-sec epoch data
## 1. Read in the excel file
dat = read_excel("~/Downloads/Example file1.xlsx",sheet = 1) %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time)))) %>%
select(Day,Activity,`Off-Wrist`,TimeStamp)
table(diff(dat$TimeStamp)) ## this confirms that the data in this file is continuous with no gap
# 1
# 11348
## 2. Patch the timepoints in first day before device started, and timepoints in last day after device terminated
##    to make each day 1440 dimensional
n_first_day = sum(dat$Day == 1)
n_last_day = sum(dat$Day == max(dat$Day))
patch_top = tibble(Day = rep(1, 1440 - n_first_day),
Activity = rep(NA, 1440 - n_first_day),
`Off-Wrist` = rep(1,1440 - n_first_day),
TimeStamp = rep(NA, 1440 - n_first_day))
patch_bottom = tibble(Day = rep( max(dat$Day), 1440 - n_last_day),
Activity = rep(NA, 1440 - n_last_day),
`Off-Wrist = rep(1,1440 - n_last_day),
TimeStamp = rep(NA, 1440 - n_last_day))
dat_patched = patch_top %>% bind_rows(dat) %>% bind_rows(patch_bottom)
rm(list = ls())
library(readxl)
library(tidyverse)
library(lubridate)
## The following code is based on 60-sec epoch data
## 1. Read in the excel file
dat = read_excel("~/Downloads/Example file1.xlsx",sheet = 1) %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time)))) %>%
select(Day,Activity,`Off-Wrist`,TimeStamp)
rm(list = ls())
library(readxl)
library(tidyverse)
library(lubridate)
## The following code is based on 60-sec epoch data
## 1. Read in the excel file
dat = read_excel("~/Downloads/Example file1.xlsx",sheet = 1) %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time)))) %>%
select(Day,Activity,`Off-Wrist`,TimeStamp)
table(diff(dat$TimeStamp)) ## this confirms that the data in this file is continuous with no gap
rm(list = ls())
library(readxl)
library(tidyverse)
library(lubridate)
## The following code is based on 60-sec epoch data
## 1. Read in the excel file
dat = read_excel("~/Downloads/Example file1.xlsx",sheet = 1) %>%
mutate(TimeStamp = ymd_hms(paste(Date,gsub("1899-12-31 ", "", Time)))) %>%
select(Day,Activity,`Off-Wrist`,TimeStamp)
table(diff(dat$TimeStamp)) ## this confirms that the data in this file is continuous with no gap
# 1
# 11348
## 2. Patch the timepoints in first day before device started, and timepoints in last day after device terminated
##    to make each day 1440 dimensional
n_first_day = sum(dat$Day == 1)
n_last_day = sum(dat$Day == max(dat$Day))
patch_top = tibble(Day = rep(1, 1440 - n_first_day),
Activity = rep(NA, 1440 - n_first_day),
`Off-Wrist` = rep(1,1440 - n_first_day),
TimeStamp = rep(NA, 1440 - n_first_day))
patch_bottom = tibble(Day = rep( max(dat$Day), 1440 - n_last_day),
Activity = rep(NA, 1440 - n_last_day),
`Off-Wrist` = rep(1,1440 - n_last_day),
TimeStamp = rep(NA, 1440 - n_last_day))
dat_patched = patch_top %>% bind_rows(dat) %>% bind_rows(patch_bottom)
View(dat)
View(dat_patched)
rle(dat$`Off-Wrist`)
library(accelerometry )
library(accelerometry)
install.packages("accelerometry ")
install.packages("accelerometry", repos="http://R-Forge.R-project.org")
View(dat_patched)
View(dat_patched)
library(accelerometry)
rle2(dat_patched$`Off-Wrist`)
n_missing = dat_patched %>% group_by(Day) %>% summarise(n_missing = sum(`Off-Wrist`))
View(n_missing)
xx = dat_patched %>% filter(Day == 9)
View(xx)
rle2(xx$`Off-Wrist`)
n_missing = dat_patched %>% group_by(Day) %>% summarise(n_missing = sum(`Off-Wrist`))
View(n_missing)
to_remove = dat_patched %>% group_by(Day) %>% summarise(n_missing = sum(`Off-Wrist`)) %>% filter(n_missing)
to_remove = dat_patched %>% group_by(Day) %>% summarise(n_missing = sum(`Off-Wrist`)) %>% filter(n_missing)
to_remove = dat_patched %>% group_by(Day) %>% summarise(n_missing = sum(`Off-Wrist`)) %>% filter(n_missing >= 0.1 * 1440)
View(to_remove)
to_remove = dat_patched %>% group_by(Day) %>% summarise(n_missing = sum(`Off-Wrist`)) %>% filter(n_missing >= 0.1 * 1440) %.% pull(Day)
to_remove = dat_patched %>% group_by(Day) %>% summarise(n_missing = sum(`Off-Wrist`)) %>% filter(n_missing >= 0.1 * 1440) %>% pull(Day)
to_remove
wide = matrix(dat_patched$Activity, ncol = 1440, byrow = T) %>% as_tibble()
names(wide) = paste0("MIN",c(1:1440))
id_cols = tibble(ID = "idnumber", Day = unique(dat$Day),Date = unique(date(dat$TimeStamp)))
wide_data = id_cols %>% bind_cols(wide)
View(wide_data)
dat_patched = dat_patched %>% mutate(
Activity2 = ifelse(`Off-Wrist` == 1, NA, Activity)
)
View(dat_patched)
## 4. Remove days with more than 10% missing data
final_Data = wide_data %>% filter(!Day %in% to_remove)
View(final_Data)
## Final Note, with multiple files from different subjects, you can loop through subjects/files and repeat the above code
save(final_Data, file = "~/Desktop/Processed.rda")
list.files()
?list.files
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
# setwd("D:/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
# setwd("D:/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
