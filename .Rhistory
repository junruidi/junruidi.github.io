abline(v = m.long, col = c(rep("azure4", m.long.length)))
abline(h = seq(40,100,10), col = c(rep("azure4", m.long.length)))
# Surgery variable
if(!is.na(orTrip1.start.Date.i.tD)) lines(orTrip1.seq, 140*matrix(1, length(orTrip1.seq), 1), col = "green", type = "h", pch = 20, cex = 2, lwd = 2)
#if(!is.na(orTrip2.start.Date.i.tD)) lines(orTrip2.seq, 140*matrix(1, length(orTrip2.seq), 1), col = "green", type = "h", pch = 20, cex = 2, lwd = 2)
print(orTrip1.start.Date.i.tD)
# t.oxy.ch.to.plot2 = t.oxy.ch.to.plot
if (n.oxy>=1){
ll = 5 - c.ind
if(ll==0){t.oxy.ch.to.plot2 = t.oxy[,c.ind+1]}
if(ll!=0){
tOp = n.col + ll
col.range = seq(n.col+1,tOp,1)
t.oxy.ch.to.plot = matrix(0, length(t.oxy.Time.tD), 1) ## if there is no control channel is written (as for ID = 1003)
for (m in col.range){
if(sum(!is.na(t.oxy[,m])) > 0) t.oxy.ch.to.plot2 = t.oxy[,m]
}
}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot2 = t.oxy[,3]}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot2 = t.oxy[,n.col]}
t.oxy.Time.tD1 = t.oxy.Time.tD
lines(t.oxy.Time.tD, t.oxy.ch.to.plot2, col = "blue", type = "p", pch = 20, cex = 2, lwd = 2)
}
## ratio plot
# to determine which channel to plot
#   t.oxy.ch.to.plot = matrix(0, length(t.oxy.Time.tD), 1) ## if there is no control channel is written (as for ID = 1003)
#   if(sum(!is.na(t.oxy[,3])) > 0) t.oxy.ch.to.plot = t.oxy[,3]
#   if(sum(!is.na(t.oxy[,4])) > 0) t.oxy.ch.to.plot = t.oxy[,4]
#   if(sum(!is.na(t.oxy[,5])) > 0) t.oxy.ch.to.plot = t.oxy[,5]
#   if(sum(!is.na(t.oxy[,6])) > 0) t.oxy.ch.to.plot = t.oxy[,6]
#
plot(global.range, matrix(-2, p, 1), las = 1, xlab = "", ylab = "", ylim = c(0.6, 1.4), xaxt="n", lty = 6, type="p", pch = ".", cex = 6, cex.lab = s, cex.axis = s, cex.main = s, main = "Anterior/Control Oxygenation Ratio. Green: OR trip.", col = "blue")
axis.POSIXct(1, at = m.long, format = "%H:%M", cex.axis = 3, labels = T)
#axis(1, at = as.double(global.range[1]), cex.axis = s, labels = m.long.char.time[1])
#axis(1, at = as.double(global.range[1]), cex.axis = s, labels = m.long.char.time[1])
axis(4, at = seq(0.6, 1.4, 0.2), las = 1,  cex.axis = s)
abline(v = m.long, col = c(rep("azure4", m.long.length)))
abline(h = seq(0.6,1.4,0.2), col = c(rep("azure4", m.long.length)))
# Surgery variable
if(!is.na(orTrip1.start.Date.i.tD)) lines(orTrip1.seq, 140*matrix(1, length(orTrip1.seq), 1), col = "green", type = "h", pch = 20, cex = 2, lwd = 2)
#if(!is.na(orTrip2.start.Date.i.tD)) lines(orTrip2.seq, 140*matrix(1, length(orTrip2.seq), 1), col = "green", type = "h", pch = 20, cex = 2, lwd = 2)
## actual lines
n.t1 = length(t.oxy.Time.tD1)
n.t2 = length(t.oxy.Time.tD1)
if(n.t1 == n.t2) lines(t.oxy.Time.tD, t.oxy.ch.to.plot1/t.oxy.ch.to.plot2, col = "blue", type = "p", pch = 20, cex = 2, lwd = 2)
# plot #3
plot(global.range, matrix(-20, p, 1), las = 1, xlab = "", ylab = "", ylim = c(0, 140), xaxt="n", lty = 6, type="p", pch = ".", cex = 6, cex.lab = s, cex.axis = s, cex.main = s, main = main.labels[3], col = "blue")
axis.POSIXct(1, at = m.long, format = "%H:%M", cex.axis = 3, labels = T)
#axis(1, at = as.double(global.range[1]), cex.axis = s, labels = m.long.char.time[1])
axis(4, at = seq(0,120,20), las = 1,  cex.axis = s)
abline(v = m.long, col = c(rep("azure4", m.long.length)))
abline(h = seq(0,120,20), col = c(rep("azure4", m.long.length)))
# Surgery variable
if(!is.na(orTrip1.start.Date.i.tD)) lines(orTrip1.seq, 140*matrix(1, length(orTrip1.seq), 1), col = "green", type = "h", pch = 20, cex = 2, lwd = 2)
#if(!is.na(orTrip2.start.Date.i.tD)) lines(orTrip2.seq, 140*matrix(1, length(orTrip2.seq), 1), col = "green", type = "h", pch = 20, cex = 2, lwd = 2)
points(t.di.time, t.di,  pch = 7, col = "brown3", lwd = 12)
if (n.pre >= 1){
ind.not.to.plot = which(t.pre[,2] <= 0)
t.pre[ind.not.to.plot, 2] = -20
lines(t.pre.Time.tD, t.pre[,2], col = "blue", type = "p", pch = 20, cex = 2, lwd = 2)
}
# plot # 4
plot(global.range, matrix(-20, p, 1), las = 1, xlab = "", ylab = "", ylim = c(0, 140), xaxt="n", lty = 6, type="p", pch = ".", cex = 6, cex.lab = s, cex.axis = s, cex.main = s, main = main.labels[4], col = "blue")
axis.POSIXct(1, at = m.long, format = "%H:%M", cex.axis = 3, labels = T)
axis(4, at = seq(0,120,20), las = 1,  cex.axis = s)
abline(v = m.long, col = c(rep("azure4", m.long.length)))
abline(h = seq(0,120,20), col = c(rep("azure4", m.long.length)))
# Surgery variable
if(!is.na(orTrip1.start.Date.i.tD)) lines(orTrip1.seq, 140*matrix(1, length(orTrip1.seq), 1), col = "green", type = "h", pch = 20, cex = 2, lwd = 2)
#if(!is.na(orTrip2.start.Date.i.tD)) lines(orTrip2.seq, 140*matrix(1, length(orTrip2.seq), 1), col = "green", type = "h", pch = 20, cex = 2, lwd = 2)
if (n.pre >= 1){
ind.not.to.plot = which(t.pre[,3] <= 0)
t.pre[ind.not.to.plot, 3] = -20
lines(t.pre.Time.tD, t.pre[,3], col = "blue", type = "p", pch = 20, cex = 2, lwd = 2)
}
lines(t.di.time, t.di, type = "p", pch = 9, col = "brown3", lwd = 12)
dev.off()
} ## for
measure.time = as.data.frame(measure.time)
names(measure.time) = c("study_id","oxy_start_time","oxy_end_time","pressure_start_time","pressure_end_time")
write.csv(measure.time,file="oxy_pre_time.csv")
####################################################
##              PACS Plot Version 2.0             ##
##                  JD, 07/15/2016                ##
####################################################
#1. Get ids
rm(list=ls())
setwd("~/Dropbox/PACS plot/schedulecheck/fivec/")
t = list.files()
ids = t[1:(length(t))]
ids = as.numeric(ids)
#2. OR time
setwd("~/Dropbox/PACS plot/")
require(timeDate)
require(qdapTools)
require(gdata)
#file.loc = "data_for_junrui_profiler_jul_2016.csv"
file.loc = "BP2.csv"
file.data = read.csv(file.loc,header = T)
file.data = subset(file.data,study_id %in% ids)
file.data = subset(file.data,select=c(study_id,OR_start,OR_end))
file.data = file.data[order(file.data$study_id),]
attach(file.data)
# start
start.date = as.character(OR_start)
start.date = substr(start.date,1,7)
start.date = as.Date(start.date,"%d%b%y")
start.time = substr(OR_start,9,16)
start = paste(start.date, start.time)
or1.start = rep(timeDate(),length(start))
for (s in 1:length(start)){
or1.start[s] = timeDate(start[s])
}
# end
end.date = as.character(OR_end)
end.date = substr(end.date,1,7)
end.date = as.Date(end.date,"%d%b%y")
end.time = substr(OR_end,9,16)
end = paste(end.date,end.time)
or1.end = rep(timeDate(),length(end))
for (e in 1:length(end)){
or1.end[e] = timeDate(end[e])
}
or = data.frame(study_id = ids, or.s=or1.start,or.e=or1.end)
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
t.oxy = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/data/dat1.csv")
View(t.oxy)
c1=sum(!is.na(t.oxy[,2])) > 0
c2=sum(!is.na(t.oxy[,3])) > 0
c3=sum(!is.na(t.oxy[,4])) > 0
c4=sum(!is.na(t.oxy[,5])) > 0
c5=sum(!is.na(t.oxy[,6])) > 0
c1
c2
c3
c4
c5
c = c(c1,c2,c3,c4,c5)
sum(c) >0
c.ind = which(c==1)[1]
n.col = c.ind + 1
if(n.col==6){t.oxy.ch.to.plot1 = t.oxy[,n.col-1]}
if(n.col<6){t.oxy.ch.to.plot1 = t.oxy[,n.col]}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot1 = t.oxy.ch.to.plot1}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot1 = t.oxy[,2]}
keep1 = t.oxy.ch.to.plot1
keep1
ll = 5 - c.ind
if(ll==0){t.oxy.ch.to.plot2 = t.oxy[,c.ind+1]}
if(ll!=0){
tOp = n.col + ll
col.range = seq(n.col+1,tOp,1)
t.oxy.ch.to.plot = matrix(NA, nrow(t.oxy), 1) ## if there is no control channel is written (as for ID = 1003)
for (m in col.range){
if(sum(!is.na(t.oxy[,m])) > 0) t.oxy.ch.to.plot2 = t.oxy[,m]
}
}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot2 = t.oxy[,3]}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot2 = t.oxy[,n.col]}
keep2 = t.oxy.ch.to.plot2
keep2
t.oxy = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/data/dat2.csv")
View(t.oxy)
c1=sum(!is.na(t.oxy[,2])) > 0
c2=sum(!is.na(t.oxy[,3])) > 0
c3=sum(!is.na(t.oxy[,4])) > 0
c4=sum(!is.na(t.oxy[,5])) > 0
c5=sum(!is.na(t.oxy[,6])) > 0
c = c(c1,c2,c3,c4,c5)
if(sum(c) == 0){  nox = nrow(t.oxy)
vox1 = 0
vox2 = 0
vox3 = 0
}
if(sum(c) >0){
c.ind = which(c==1)[1]
n.col = c.ind + 1
if(n.col==6){t.oxy.ch.to.plot1 = t.oxy[,n.col-1]}
if(n.col<6){t.oxy.ch.to.plot1 = t.oxy[,n.col]}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot1 = t.oxy.ch.to.plot1}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot1 = t.oxy[,2]}
keep1 = t.oxy.ch.to.plot1
ll = 5 - c.ind
if(ll==0){t.oxy.ch.to.plot2 = t.oxy[,c.ind+1]}
if(ll!=0){
tOp = n.col + ll
col.range = seq(n.col+1,tOp,1)
t.oxy.ch.to.plot = matrix(NA, nrow(t.oxy), 1) ## if there is no control channel is written (as for ID = 1003)
for (m in col.range){
if(sum(!is.na(t.oxy[,m])) > 0) t.oxy.ch.to.plot2 = t.oxy[,m]
}
}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot2 = t.oxy[,3]}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot2 = t.oxy[,n.col]}
keep2 = t.oxy.ch.to.plot2
}
keep1
keep2
t.oxy = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/data/dat3.csv")
View(t.oxy)
c1=sum(!is.na(t.oxy[,2])) > 0
c2=sum(!is.na(t.oxy[,3])) > 0
c3=sum(!is.na(t.oxy[,4])) > 0
c4=sum(!is.na(t.oxy[,5])) > 0
c5=sum(!is.na(t.oxy[,6])) > 0
c = c(c1,c2,c3,c4,c5)
c.ind = which(c==1)[1]
n.col = c.ind + 1
if(n.col==6){t.oxy.ch.to.plot1 = t.oxy[,n.col-1]}
if(n.col<6){t.oxy.ch.to.plot1 = t.oxy[,n.col]}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot1 = t.oxy.ch.to.plot1}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot1 = t.oxy[,2]}
keep1 = t.oxy.ch.to.plot1
ll = 5 - c.ind
if(ll==0){t.oxy.ch.to.plot2 = t.oxy[,c.ind+1]}
if(ll!=0){
tOp = n.col + ll
col.range = seq(n.col+1,tOp,1)
t.oxy.ch.to.plot = matrix(NA, nrow(t.oxy), 1) ## if there is no control channel is written (as for ID = 1003)
for (m in col.range){
if(sum(!is.na(t.oxy[,m])) > 0) t.oxy.ch.to.plot2 = t.oxy[,m]
}
}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot2 = t.oxy[,3]}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot2 = t.oxy[,n.col]}
keep2 = t.oxy.ch.to.plot2
keep1
keep2
t.oxy = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/data/dat4.csv")
View(t.oxy)
c1=sum(!is.na(t.oxy[,2])) > 0
c2=sum(!is.na(t.oxy[,3])) > 0
c3=sum(!is.na(t.oxy[,4])) > 0
c4=sum(!is.na(t.oxy[,5])) > 0
c5=sum(!is.na(t.oxy[,6])) > 0
c = c(c1,c2,c3,c4,c5)
c.ind = which(c==1)[1]
n.col = c.ind + 1
if(n.col==6){t.oxy.ch.to.plot1 = t.oxy[,n.col-1]}
if(n.col<6){t.oxy.ch.to.plot1 = t.oxy[,n.col]}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot1 = t.oxy.ch.to.plot1}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot1 = t.oxy[,2]}
keep1 = t.oxy.ch.to.plot1
ll = 5 - c.ind
if(ll==0){t.oxy.ch.to.plot2 = t.oxy[,c.ind+1]}
if(ll!=0){
tOp = n.col + ll
col.range = seq(n.col+1,tOp,1)
t.oxy.ch.to.plot = matrix(NA, nrow(t.oxy), 1) ## if there is no control channel is written (as for ID = 1003)
for (m in col.range){
if(sum(!is.na(t.oxy[,m])) > 0) t.oxy.ch.to.plot2 = t.oxy[,m]
}
}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot2 = t.oxy[,3]}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot2 = t.oxy[,n.col]}
keep2 = t.oxy.ch.to.plot2
keep1
keep2
source('~/.active-rstudio-document', echo=TRUE)
t.oxy = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/data/dat5.csv")
c1=sum(!is.na(t.oxy[,2])) > 0
c2=sum(!is.na(t.oxy[,3])) > 0
c3=sum(!is.na(t.oxy[,4])) > 0
c4=sum(!is.na(t.oxy[,5])) > 0
c5=sum(!is.na(t.oxy[,6])) > 0
c = c(c1,c2,c3,c4,c5)
View(t.oxy)
t.oxy = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/data/dat5.csv")
t.oxy = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/data/dat5.csv")
rm(list = ls)
rm(list = ls())
t.oxy = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/data/dat5.csv")
View(t.oxy)
c1=sum(!is.na(t.oxy[,2])) > 0
c2=sum(!is.na(t.oxy[,3])) > 0
c3=sum(!is.na(t.oxy[,4])) > 0
c4=sum(!is.na(t.oxy[,5])) > 0
c5=sum(!is.na(t.oxy[,6])) > 0
c = c(c1,c2,c3,c4,c5)
c.ind = which(c==1)[1]
n.col = c.ind + 1
if(n.col==6){t.oxy.ch.to.plot1 = t.oxy[,n.col-1]}
if(n.col<6){t.oxy.ch.to.plot1 = t.oxy[,n.col]}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot1 = t.oxy.ch.to.plot1}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot1 = t.oxy[,2]}
keep1 = t.oxy.ch.to.plot1
ll = 5 - c.ind
if(ll==0){t.oxy.ch.to.plot2 = t.oxy[,c.ind+1]}
if(ll!=0){
tOp = n.col + ll
col.range = seq(n.col+1,tOp,1)
t.oxy.ch.to.plot = matrix(NA, nrow(t.oxy), 1) ## if there is no control channel is written (as for ID = 1003)
for (m in col.range){
if(sum(!is.na(t.oxy[,m])) > 0) t.oxy.ch.to.plot2 = t.oxy[,m]
}
}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot2 = t.oxy[,3]}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot2 = t.oxy[,n.col]}
keep2 = t.oxy.ch.to.plot2
keep1
keep2
rm(list = ls())
t.oxy = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/data/dat6.csv")
c1=sum(!is.na(t.oxy[,2])) > 0
c2=sum(!is.na(t.oxy[,3])) > 0
c3=sum(!is.na(t.oxy[,4])) > 0
c4=sum(!is.na(t.oxy[,5])) > 0
c5=sum(!is.na(t.oxy[,6])) > 0
c = c(c1,c2,c3,c4,c5)
View(t.oxy)
c.ind = which(c==1)[1]
n.col = c.ind + 1
if(n.col==6){t.oxy.ch.to.plot1 = t.oxy[,n.col-1]}
if(n.col<6){t.oxy.ch.to.plot1 = t.oxy[,n.col]}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot1 = t.oxy.ch.to.plot1}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot1 = t.oxy[,2]}
keep1 = t.oxy.ch.to.plot1
ll = 5 - c.ind
if(ll==0){t.oxy.ch.to.plot2 = t.oxy[,c.ind+1]}
if(ll!=0){
tOp = n.col + ll
col.range = seq(n.col+1,tOp,1)
t.oxy.ch.to.plot = matrix(NA, nrow(t.oxy), 1) ## if there is no control channel is written (as for ID = 1003)
for (m in col.range){
if(sum(!is.na(t.oxy[,m])) > 0) t.oxy.ch.to.plot2 = t.oxy[,m]
}
}
if(sum(c)==1 & c1==TRUE){t.oxy.ch.to.plot2 = t.oxy[,3]}
if(sum(c)==1 & c1==FALSE){t.oxy.ch.to.plot2 = t.oxy[,n.col]}
keep2 = t.oxy.ch.to.plot2
keep1
keep2
rm(list = ls())
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre6/oxypre1.rda")
View(oxydate)
View(oxy)
rm(list = ls())
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre6/oxypre2.rda")
View(oxy)
oxy$pmax = max(oxy$p1,oxy$p2)
oxy$pmin = min(oxy$p1,oxy$p2)
View(oxy)
View(oxy)
View(oxy)
rm(list = ls())
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre6/oxypre2.rda")
oxy$pmax = NULL
for(i in 1:nrow(oxy)){
oxy$pmax[i] = max(oxy$p1[i],oxy$p2[i])
}
View(oxy)
rm(list = ls())
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre6/oxypre2.rda")
oxy$pmax = NULL
for(i in 1:nrow(oxy)){
oxy$pmax[i] = max(oxy$p1[i],oxy$p2[i])
}
oxy$pmin = NULL
for(i in 1:nrow(oxy)){
oxy$pmin[i] = min(oxy$p1[i],oxy$p2[i])
}
View(oxy)
dat = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre3/METRCPACS_DATA_LABELS_2016-12-17_1047.csv")
site = subset(dat,select = c(ID,Data.Access.Group))
site$site = substr(site$Data.Access.Group,1,3)
site$site2 = ifelse(site$site %in% c("BAM","DHA","HCM","WFU"),"Others",site$site)
site = subset(site, select = c(ID,site,site2))
AOOTA = subset(dat, select = c(ID,AO.OTA))
AOOTA$AO = substr(AOOTA$AO.OTA,1,2)
AOOTA$AO[which(AOOTA$AO=="43" | AOOTA$AO=="44")] = "43+"
AOOTA$OTA = gsub('[0-9]+',"",AOOTA$AO.OTA)
AOOTA$OTA = gsub('[[:punct:]]',"",AOOTA$OTA)
AOOTA = subset(AOOTA, select = c(ID,AO,OTA))
gustello = subset(dat, select = c(ID,GUSTILLO))
gustello$g = character(195)
gustello$g[which(gustello$GUSTILLO == "Closed")] = "closed"
gustello$g[which(gustello$GUSTILLO == "Open I")] = "I-II"
gustello$g[which(gustello$GUSTILLO == "Open II")] = "I-II"
gustello$g[which(gustello$GUSTILLO == "Open IIIA")] = "III"
gustello = subset(gustello,select = c(ID,g))
TSCHERNE = subset(dat, select = c(ID,TSCHERNE))
TSCHERNE$t = gsub("\\:.*","",TSCHERNE$TSCHERNE)
TSCHERNE$t = gsub("Grade ","",TSCHERNE$t)
TSCHERNE$t2 = character(195)
TSCHERNE$t2[which(TSCHERNE$t== "")] = "open"
TSCHERNE$t2[which(TSCHERNE$t == "C0")] = "C0-CI"
TSCHERNE$t2[which(TSCHERNE$t == "CI")] = "C0-CI"
TSCHERNE$t2[which(TSCHERNE$t == "CII")] = "CII-CIII"
TSCHERNE$t2[which(TSCHERNE$t == "CIII")] = "CII-CIII"
tscherne = subset(TSCHERNE,select = c(ID,t2))
muscle = subset(dat, select = c(ID,X5..Muscle))
muscle$m = as.numeric(as.factor(muscle$X5..Muscle))
dat2 = read.csv("~/Dropbox/Shared Folder/Data Management - post data to share here by date/Panel Data/questionnaires-2017_01_11.csv")
load("~/Dropbox/Shared Folder/PACS Concordance/us.rda")
dat2 = subset(dat2, User %in% us)
bmi = subset(dat2, select = c(Study.ID, patientCharacter4))
bmi$BMI = gsub('[A-Z]+',"",bmi$patientCharacter4)
bmi$BMI = as.numeric(gsub(':',"",bmi$BMI))
bmi = unique(bmi)
bmi$ID = gsub("PAC-","",bmi$Study.ID)
bmi = subset(bmi, select = c(ID,BMI))
bmi$BMICat = character(nrow(bmi))
# bmi$BMICat = ifelse(bmi$BMI <15, "VSU", bmi$BMICat)
# bmi$BMICat = ifelse(bmi$BMI >=15 & bmi$BMI <16, "SU", bmi$BMICat)
#bmi$BMICat = ifelse(bmi$BMI >=16 & bmi$BMI <18.5, "1", bmi$BMICat)
bmi$BMICat = ifelse(bmi$BMI <25, "1", bmi$BMICat) #underweight and normal
bmi$BMICat = ifelse(bmi$BMI >=25 & bmi$BMI <30, "2", bmi$BMICat) #overweight
bmi$BMICat = ifelse(bmi$BMI >=30 & bmi$BMI <35, "3", bmi$BMICat) #obeseI
bmi$BMICat = ifelse(bmi$BMI >=35,"4", bmi$BMICat) #obese II III
dat3 = read.csv("~/Dropbox/Junrui Di/PACS Modeling/missingness/oxypre6/pacs_raceEthnicity.csv")
race = dat3
race$race = as.character(race$race)
race$race2 = ifelse(race$race %in% c("Hispanic","Other race-ethnicity"), "other",race$race)
race = subset(race, select = c(ID,race2))
names(race)[2] = "race"
charc = subset(dat, select = c(ID,Skin.Pigmentation,
X.Hematoma,X.Abrasion))
names(charc) = c("ID","pigmen","hematoma","abrasion")
for(i in 2:4){
charc[,i] = as.character(charc[,i])
}
charc$pig[which(charc$pigmen=="")] = "Missing"
charc$pig[which(charc$pigmen=="Dark")] = "D&M"
charc$pig[which(charc$pigmen=="Medium")] = "D&M"
charc$pig[which(charc$pigmen=="Light")] = "Light"
charc$hematoma[which(charc$hematoma=="")] = "Missing"
charc$abrasion[which(charc$abrasion=="")] = "Missing"
oxy1 = merge(x = oxy, y = site, all.x = T)
oxy1 = merge(x = oxy1, y = AOOTA, all.x = T)
oxy1 = merge(x = oxy1, y = gustello, all.x = T)
oxy1 = merge(x = oxy1, y = tscherne, all.x = T)
oxy1 = merge(x = oxy1, y = muscle, all.x = T)
oxy1 = merge(x = oxy1, y = charc, all.x = T)
oxy1 = merge(x = oxy1, y = bmi, all.x = T)
oxy1 = merge(x = oxy1, y = race, all.x = T)
View(oxy1)
save(oxy1, file = "~/Dropbox/Junrui Di/PACS Modeling/missingness/document/oxyswitch.rda")
#2. check the distribution
rm(list = ls())
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/oxyswitch.rda")
View(oxy1)
rm(list = ls())
load("~/Dropbox/Junrui Di/PACS Modeling/missingness/document/oxyswitch.rda")
op1 = subset(oxy1, select = c(ID,p1))
op1$type = "injured"
names(op1)[2] = "p"
op2 = subset(oxy1, select = c(ID,p2))
op2$type = "control"
names(op2)[2] = "p"
op3 = subset(oxy1, select = c(ID,p))
op3$type = "overlapping"
names(op3)[2] = "p"
opmax = subset(oxy1, select = c(ID,pmax))
opmax$type = "max"
names(opmax)[2] = "p"
opmin = subset(oxy1, select = c(ID,pmin))
opmin$type = "min"
names(opmin)[2] = "p"
View(op1)
View(op2)
View(op3)
View(opmin)
View(opmax)
pall = rbind(op1,op2,op3,opmax,opmin)
pall$type = as.factor(pall$type)
boxplot(p~type2,data = pall,ylim = c(0,1),ylab = "Valid Percentage", main = "Comparison of all 4 channels")
pall = rbind(op1,op2,op3,opmax,opmin)
pall$type2 = as.factor(pall$type)
boxplot(p~type2,data = pall,ylim = c(0,1),ylab = "Valid Percentage", main = "Comparison of all 4 channels")
library(ggplot2)
ggplot(pall, aes(p, fill = type2, colour = type2)) +
geom_density(alpha = 0.1) + labs(x = "Valid Percentage")
xlim(0, 100)
o = subset(oxy1, select = c(ID, p1, p2, p,pmax,pmin))
names(o) = c("ID","op1","op2","op3","pmax","pmin")
View(o)
n = dim(o)[1]
n
p0 = beanplot(f[,2:6],names=c("Injured O2","Control O2","Overlapping O2",
"Max O2","Min O2"),
ll = 0.05, col = "aliceblue", main = "Comparison of 4 channles",ylab="Valid Percentage",log="auto",
cutmin = 0,cutmax = 1,overallline = "median")
library(beanplot)
n = dim(o)[1]
attach(f)
p0 = beanplot(f[,2:6],names=c("Injured O2","Control O2","Overlapping O2",
"Max O2","Min O2"),
ll = 0.05, col = "aliceblue", main = "Comparison of 4 channles",ylab="Valid Percentage",log="auto",
cutmin = 0,cutmax = 1,overallline = "median")
p0 = beanplot(o[,2:6],names=c("Injured O2","Control O2","Overlapping O2",
"Max O2","Min O2"),
ll = 0.05, col = "aliceblue", main = "Comparison of 4 channles",ylab="Valid Percentage",log="auto",
cutmin = 0,cutmax = 1,overallline = "median")
