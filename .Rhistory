employ + bmi_cat + comorbid2  + Q_la10 * Age,data = surv)
summary(model.qla10)
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
model.la10 = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + scale(lambda.a10) * Age,data = surv)
summary(model.la10)
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
library(survival)
ApplyQuintiles <- function(x) {
as.character(cut(x, breaks=c(quantile(x,seq(0, 1, by = 0.25))),
labels=c("Q1","Q2","Q3","Q4"), include.lowest=TRUE))
}
surv$Q_la10 = ApplyQuintiles(surv$lambda.a10)
model.qla10 = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + Q_la10 * Age,data = surv)
summary(model.qla10)
names(surv)
survdiff(Surv(time, event) ~ Q_la10, data=surv)
library(survival)
ApplyQuintiles <- function(x) {
as.character(cut(x, breaks=c(quantile(x,seq(0, 1, by = 0.25))),
labels=c("Q1","Q2","Q3","Q4"), include.lowest=TRUE))
}
surv$Q_la10 = ApplyQuintiles(surv$lambda.a10)
survfit_qla = survfit(Surv(time/365, event) ~ Q_la10, data = surv)
plot(survfit_qla, main = "Fragmentation v.s Survival",conf.int=FALSE, col=c("blue","red","green","purple"), xlab="Yrs", ylab = "Proportion Surviving")
legend("bottomleft", c("Q1","Q2","Q3","Q4"), col=c("blue","red","green","purple"), lty = 1)
survdiff(Surv(time, event) ~ Q_la10, data=surv)
surv$Q_tac = ApplyQuintiles(surv$TAC)
survfit_qtac = survfit(Surv(time/365, event) ~ Q_tac, data = surv)
plot(survfit_qtac, main = "TAC v.s Survival",conf.int=FALSE, col=c("blue","red","green","purple"), xlab="Yrs", ylab = "Proportion Surviving")
legend("bottomleft", c("Q1","Q2","Q3","Q4"), col=c("blue","red","green","purple"), lty = 1)
survdiff(Surv(time, event) ~ Q_tac, data=surv)
surv$Q_tlac = ApplyQuintiles(surv$TLAC)
survfit_qtlac = survfit(Surv(time/365, event) ~ Q_tlac, data = surv)
plot(survfit_qtlac, main = "TLAC v.s Survival",conf.int=FALSE, col=c("blue","red","green","purple"), xlab="Yrs", ylab = "Proportion Surviving")
legend("bottomleft", c("Q1","Q2","Q3","Q4"), col=c("blue","red","green","purple"), lty = 1)
survdiff(Surv(time, event) ~ Q_tlac, data=surv)
surv$Q_ltac = ApplyQuintiles(surv$LTAC)
survfit_qltac = survfit(Surv(time/365, event) ~ Q_ltac, data = surv)
plot(survfit_qltac, main = "LTAC v.s Survival",conf.int=FALSE, col=c("blue","red","green","purple"), xlab="Yrs", ylab = "Proportion Surviving")
legend("bottomleft", c("Q1","Q2","Q3","Q4"), col=c("blue","red","green","purple"), lty = 1)
survdiff(Surv(time, event) ~ Q_ltac, data=surv)
surv$Q_act = ApplyQuintiles(surv$act_time)
survfit_act = survfit(Surv(time/365, event) ~ Q_act, data = surv)
plot(survfit_act, main = "Active Time v.s Survival",conf.int=FALSE, col=c("blue","red","green","purple"), xlab="Yrs", ylab = "Proportion Surviving")
legend("bottomleft", c("Q1","Q2","Q3","Q4"), col=c("blue","red","green","purple"), lty = 1)
survdiff(Surv(time, event) ~ Q_act, data=surv)
names(surv)
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
model.tb12 = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + I(tb12/act_time) * Age,data = surv)
summary(model.tb12)
x = surv$tb12/surv$act_time
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
x = surv$tb12/surv$act_time
model.tb12 = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + x * Age,data = surv)
summary(model.tb12)
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
model.tb12 = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + I(tb12/act_time) * Age,data = surv)
summary(model.tb12)
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
model.tb12 = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + I(0.1* tb12/act_time) * Age,data = surv)
summary(model.tb12)
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
model.tb12 = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + scale(I(tb12/act_time)) * Age,data = surv)
summary(model.tb12)
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
model.tb12 = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + I(10 * tb12/act_time) * Age,data = surv)
summary(model.tb12)
y = rnorm(10)
x = rnorm(1-)
x = rnorm(10)
x = c(1:10)
summary(lm(y~x))
summary(lm(y~I(x*10))
)
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
model.tb25 = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + I(10 * tb25/act_time) * Age,data = surv)
summary(model.tb25)
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
model.tb510 = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + I(10 * tb510/act_time) * Age,data = surv)
summary(model.tb510)
rm(list = ls())
setwd("~/Dropbox/BLSA Mortality/")
load("data/analysis/survival_ready.rda")
model.tb10p = coxph(Surv(time, event) ~ female + factor(race) +  smoking_cat + alcohol_cat +
employ + bmi_cat + comorbid2  + I(10 * tb10p/act_time) * Age,data = surv)
summary(model.tb10p)
install.packages(c("callr", "ddalpha", "lubridate", "openssl", "quantreg", "RcppEigen", "smooth", "svMisc", "tseries", "viridis", "viridisLite"))
install.packages(c("bookdown", "devtools", "fda.usc", "nlme"))
install.packages(c("dbplyr", "forcats", "stringr", "XML"))
install.packages("devtools")
library(devtools)
?document
devtools::install_github("junruidi/actigraph")
devtools::install_github("junruidi/actigraphy")
1718.75 + 5578.11+1041.67
1083.33*3
1083.33*3+2125
1718.5 +8338.53+2125
8338.53+2125
install.packages(c("MASS", "pillar", "rpart", "svMisc", "timeDate", "usethis"))
install.packages("tidyselect")
rm(list = ls())
load("~/Dropbox/Junrui Di/Other papers/Adam CR/data/processed.rda")
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/act_impute.rda")
head(activity$ID)
length(unique(activity$ID))
?tapply(vector, index, function)
?tapply
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/act_impute.rda")
activity$Seq = NULL
rss = function(x){
return((x-mean(x))^2)
}
within_rss = activity %>% group_by("ID") %>% summarise_all(rss)
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/act_impute.rda")
activity$Seq = NULL
rss = function(x){
return((x-mean(x))^2)
}
library(dplyr)
within_rss = activity %>% group_by("ID") %>% summarise_all(rss)
x = na.omit(activity)
head(activity$ID)
activity$ID[1:10]
a = activity$MIN1[1:17]
a = activity$MIN1[1:7]
activity$ID[1:7]
a = activity$MIN1[1:6]
rss(a)
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/act_impute.rda")
activity$Seq = NULL
rss = function(x){
a = sum((x-mean(x))^2)
return(a)
}
library(dplyr)
rss = function(x){
a = sum((x-mean(x))^2)
return(a)
}
a = activity$MIN1[1:6]
a
rss(a)
var(a)
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/act_impute.rda")
activity$Seq = NULL
rss = function(x){
a = sum((x-mean(x))^2)
return(a)
}
library(dplyr)
within_rss = activity %>% group_by("ID") %>% summarise_all(rss)
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam CR/data/processed.rda")
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/act_impute.rda")
activity$Seq = NULL
rss = function(x){
a = sum((x-mean(x))^2)
return(a)
}
library(dplyr)
within_rss = activity %>% group_by("ID") %>% summarise_all(rss)
head(names(activity))
id.list = unique(activity$ID)
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/act_impute.rda")
activity$Seq = NULL
rss = function(x){
a = sum((x-mean(x))^2)
return(a)
}
id.list = unique(activity$ID)
i = 1
id.i = id.list[i]
dat = subset(activity, ID == id.i)
dat = as.matrix(subset(activity, ID == id.i)[,-1])
l = apply(dat, 2, rss)
id.list = unique(activity$ID)
result = data.frame()
for(i in 1:366){
id.i = id.list[i]
dat = as.matrix(subset(activity, ID == id.i)[,-1])
l = apply(dat, 2, rss)
result = rbind(result,l)
}
sum(is.na(result))
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/act_impute.rda")
activity$Seq = NULL
rss = function(x){
a = sum((x-mean(x))^2)
return(a)
}
library(dplyr)
within_rss = activity %>% group_by(ID) %>% summarise_all(rss)
within_rss$MIN1[1]
?apply
within_var = apply(within_rss,2, sum)
within_var = apply(within_rss[,-1],2, sum)
within_var = apply(within_rss[,-1],2, sum)/(2110 - 366)
within_var = apply(within_rss[,-1],2, sum)
act_ave = as.data.frame(activity %>% group_by(ID) %>% summarise_all(funs(mean(.,na.rm = T))))
between_rss = apply(act_ave[,-1],2,rss)
between_var = between_rss/(366-1)
plot(x = c(1:1440), y = within_var)
plot(x = c(1:1440), y = between_var)
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/act_impute.rda")
activity$Seq = NULL
rss = function(x){
a = sum((x-mean(x))^2)
return(a)
}
library(dplyr)
within_rss = activity %>% group_by(ID) %>% summarise_all(rss)
within_var = apply(within_rss[,-1],2, sum)/(2110 - 366)
act_ave = as.data.frame(activity %>% group_by(ID) %>% summarise_all(funs(mean(.,na.rm = T))))
between_rss = apply(act_ave[,-1],2,rss)
between_var = between_rss/(366-1)
plot(x = c(1:1440), y = within_var, type = "l", xlab = "Time",ylab = "", main = "Wintin Subject Variability")
plot(x = c(1:1440), y = betwee_var, type = "l", xlab = "Time",ylab = "", main = "Between Subject Variability")
plot(x = c(1:1440), y = between_var, type = "l", xlab = "Time",ylab = "", main = "Between Subject Variability")
contributors()
rm(list = ls())
#1 minute epoch
load("~/Dropbox/Junrui Di/Other papers/Adam talf circadian/data/act_impute.rda")
activity$Seq = NULL
rss = function(x){
a = sum((x-mean(x))^2)
return(a)
}
library(dplyr)
within_rss = activity %>% group_by(ID) %>% summarise_all(rss)
within_var = apply(within_rss[,-1],2, sum)/(2110 - 366)
act_ave = as.data.frame(activity %>% group_by(ID) %>% summarise_all(funs(mean(.,na.rm = T))))
between_rss = apply(act_ave[,-1],2,rss)
between_var = between_rss/(366-1)
plot(x = c(1:1440), y = within_var, type = "l", xlab = "Time",ylab = "", main = "Wintin Subject Variability")
plot(x = c(1:1440), y = between_var, type = "l", xlab = "Time",ylab = "", main = "Between Subject Variability")
plot(x = c(1:1440), y = icc, type = "l", xlab = "Time",ylab = "", main = "ICC")
View(within_rss)
icc = (between_var - within_var)/(between_var + within_var)
plot(x = c(1:1440), y = icc, type = "l", xlab = "Time",ylab = "", main = "ICC")
install.packages(c("DBI", "enc", "httpuv", "ICS", "JADE", "openssl", "RcppArmadillo", "rmarkdown", "tensorBSS"))
1/12
6/7
exp(0.13)
exp(-3/433987)
exp(-3.433987)
load("~/Dropbox/Junrui Di/tensor analysis/GSVD/Data/hr50.rda")
Y = scale(hr50[,-1], center = T, scale = F)
svdy = svd(Y)
u = svdy$u
v = svdy$v
s = diag(svdy$d)
w = v %*% solve(s)
View(w)
ww = round(w, digits = 5)
View(ww)
table(w)
table(ww)
View(v)
View(s)
invs = solve(s)
View(invs)
View(v)
Yp = Y %*% w
View(Yp)
View(u)
y1 = t(Y[1,])
View(y1)
y1 = Y[1,]
y1
check = w %*% y1
View(check)
check = c(check)
View(ww)
plot(check, Yp[1,])
load("~/Dropbox/Junrui Di/tensor analysis/GSVD/Data/hr50.rda")
Y = scale(hr50[,-1], center = T, scale = F)
svdy = svd(Y)
u = svdy$u
v = svdy$v
s = diag(svdy$d)
w = v %*% solve(s)
install.packages(c("gender", "qdapDictionaries", "selectr", "sfsmisc", "smooth"))
install.packages(c("bindr", "hms", "ICSNP", "igraph", "packrat", "Rcpp", "rsconnect", "scatterplot3d", "stringdist", "stringi", "styler", "survey", "tinytex", "yaml"))
install.packages(c("DescTools", "igraph", "msme", "smacof", "stringdist", "withr", "xts"))
install.packages("installr")
install.packages("installr")
getwd()
list.files()
list.files()
load("~/Dropbox/Junrui Di/PACS Modeling/outcome/outcome.rda")
IDkeep = union(unique(delta1$ID),unique(delta2$ID))
outcome = subset(outcome, ID %in% IDkeep)
table(outcome$fac1)
168,23
#2. fasciotomy cases
fac_id = c(1003,1530,1558,1560,1568,1642,1648,2706,2805,2838,2841,2858,2895,4022,4038,5507,5531,5546,5595,5702,5703,5704,5711,5717)
which(!fac_id %in% outcome$ID)
fac_id[12]
View(outcome)
load("~/Dropbox/Junrui Di/PACS Modeling/outcome/outcome.rda")
fac_id = c(1003,1530,1558,1560,1568,1642,1648,2706,2805,2838,2841,2858,2895,4022,4038,5507,5531,5546,5595,5702,5703,5704,5711,5717)
which(!fac_id %in% outcome$ID)
fac_id【12
fac_id[12]
View(outcome)
install.packages(c("curl", "lava", "lme4", "plogr", "pROC", "randomForest", "rgl", "selectr", "spam"))
300.61+698.88
300.61+698.88+165
# Explore the likelihood score and variability (MAD)
rm(list = ls())
setwd("~/Dropbox/Junrui Di/PACS Modeling/outcome/")
load("alldata.rda")
remove_id = c(1560, 2797, 1692, 1606, 1648, 1650, 1705, 5718, 5798)
alldata = subset(alldata, !ID %in% remove_id)
all_likelihood = subset(alldata, select = c(ID, Likelihood))
library(dplyr)
all_likelihood = na.omit(all_likelihood)
median_abs_dev = function(x,na.rm){return(median(abs(x - median(x))))}
median_likelihood = all_likelihood %>% group_by(ID) %>% summarise(med_score = median(Likelihood), mad_score = median_abs_dev(Likelihood))
# median_likelihood$med_score = round(median_likelihood$med_score,4)
# median_likelihood$mad_score = round(median_likelihood$mad_score,4)
median_likelihood$group1 = "Low"
median_likelihood$group1[which(median_likelihood$med_score>0.3 & median_likelihood$med_score<=0.7)] = "Medium"
median_likelihood$group1[which(median_likelihood$med_score>0.7)] = "High"
median_likelihood$group1 = factor(median_likelihood$group1, levels = c("Low","Medium","High"))
# #compare to see if medians are the same as in the outcomefile
# load("D:/Dropbox/Junrui Di/PACS Modeling/outcome/outcome.rda")
# remove_id = c(1560, 2797, 1692, 1606, 1648, 1650, 1705, 5718, 5798)
# outcome = subset(outcome, !ID %in% remove_id)
png(file = "~/Dropbox/Junrui Di/PACS Modeling/Explore0405/results/medianplot.png", units = "in",
width = 10,height = 7, res = 300)
plot(x = median_likelihood$med_score, y = median_likelihood$mad_score,pch = 19,
col = c("red","blue","green")[median_likelihood$group1],
xlab = "Median Likelihood", ylab = "Median Absolute Deviation",
ylim = c(0,0.3),axes = F,
main = "Median v.s. Variation with Pannels")
abline(v = c(0.3,0.7), lty = 3)
abline(a = 0.3, b = -1, lty = 3)
abline(a = -0.7, b = 1, lty = 3)
axis(1, pos=0)
axis(2, pos=0)
dev.off()
one = median_likelihood$ID[which(median_likelihood$group1 == "Low" & (median_likelihood$med_score + median_likelihood$mad_score) > 0.300000001)]
two = median_likelihood$ID[which(median_likelihood$group1 == "High" & (median_likelihood$med_score - median_likelihood$mad_score) < 0.6999999999)]
remove_1 = union(one,two)
new_dat_1 = subset(median_likelihood, ! ID %in% remove_1)
png(file = "~/Dropbox/Junrui Di/PACS Modeling/Explore0405/results/medianplot_remove.png", units = "in",
width = 10,height = 7, res = 300)
plot(x = new_dat_1$med_score, y = new_dat_1$mad_score,pch = 19,
col = c("red","blue","green")[new_dat_1$group1],
xlab = "Median Likelihood", ylab = "Median Absolute Deviation",
ylim = c(0,0.3),axes = F,
main = "Median v.s. Variation with Pannels")
abline(v = c(0.3,0.7), lty = 3)
abline(a = 0.3, b = -1, lty = 3)
abline(a = -0.7, b = 1, lty = 3)
axis(1, pos=0)
axis(2, pos=0)
dev.off()
library(ggplot2)
library(lattice)
label_toplot = merge(x = all_likelihood, y = median_likelihood, all.x = T)
label_toplot = label_toplot[order(label_toplot[,5],label_toplot[,4],label_toplot[,1]),]
order_id_list = unique(label_toplot$ID)
label_toplot$newID = 0
for(i in 1:length(order_id_list)){
id.i = order_id_list[i]
label_toplot$newID[which(label_toplot$ID == id.i)] = i
}
# boxplot(Likelihood ~ newID, data = label_toplot, ylab = 'Likelihood',xaxt = "n")
# stripchart(Likelihood ~ newID, vertical = TRUE, data = label_toplot,
#            method = "jitter", add = TRUE, pch = 20, col = c("red","blue","green")[label_toplot$group1])
# abline(h = 0.3,lty = 3)
# abline(h = 0.7, lty = 3)
#
# boxplot(Likelihood ~ newID, data = label_toplot, ylab = 'Likelihood',xaxt = "n",outline=F, varwidth=T)
# stripchart(label_toplot[label_toplot$group1 == "Low", "Likelihood"] ~ label_toplot[label_toplot$group1 == "Low", "newID"], add=T, vertical=T, pch=21, bg=c("red"), method='jitter', jitter=0.02)
# stripchart(label_toplot[label_toplot$group1 == "Medium", "Likelihood"] ~ label_toplot[label_toplot$group1 == "Medium", "newID"], add=T, vertical=T, pch=21, bg=c("blue"), method='jitter', jitter=0.02)
label_toplot$newID2 = factor(label_toplot$newID,levels = as.character(c(1:182)),order = T)
names(label_toplot)[5] = "Category"
png(file = "~/Dropbox/Junrui Di/PACS Modeling/Explore0405/results/allsubjects.png", res = 300, width = 25, height = 7,units = "in")
ggplot(label_toplot, aes(x = newID2, y = Likelihood, col = Category)) +
geom_boxplot(alpha = 0) +
geom_point(alpha=1, position = position_jitter(w = 0.05, h = 0)) +
theme(axis.ticks.x = element_blank(),
axis.text.x=element_blank()) +
xlab("Subjects") +
scale_y_continuous(breaks = seq(0,1,0.1)) +
geom_hline(yintercept =c(0.3,0.7), size = 1.2,linetype = "dotted")
dev.off()
low = unique(label_toplot$ID[which(label_toplot$Likelihood > 0.3 & label_toplot$Category == "Low")])
high = unique(label_toplot$ID[which(label_toplot$Likelihood <= 0.7 & label_toplot$Category == "High")])
remove_2 = union(low,high)
new_dat_2 = subset(label_toplot, ! ID %in% remove_2)
png(file = "~/Dropbox/Junrui Di/PACS Modeling/Explore0405/results/allsubjects_remove.png", res = 300, width = 25, height = 7,units = "in")
ggplot(new_dat_2, aes(x = newID2, y = Likelihood, col = Category)) +
geom_boxplot(alpha = 0) +
geom_point(alpha=1, position = position_jitter(w = 0.05, h = 0)) +
theme(axis.ticks.x = element_blank(),
axis.text.x=element_blank()) +
xlab("Subjects") +
scale_y_continuous(breaks = seq(0,1,0.1)) +
geom_hline(yintercept =c(0.3,0.7), size = 1.2,linetype = "dotted")
dev.off()
save(remove_1, remove_2, file = "~/Dropbox/Junrui Di/PACS Modeling/Explore0405/data/toremove.rda")
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("~/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
# git add -A
# git commit -m "2nd commit"
# git push origin master
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("D:/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
