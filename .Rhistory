x_test <- x_test / 255
y_train <- to_categorical(y_train, 10)
y_test <- to_categorical(y_test, 10)
model <- keras_model_sequential()
model %>%
layer_dense(units = 256, activation = "relu", input_shape = c(784)) %>%
layer_dropout(rate = 0.4) %>%
layer_dense(units = 128, activation = "relu") %>%
layer_dropout(rate = 0.3) %>%
layer_dense(units = 10, activation = "softmax")
summary(model)
model %>% compile(
loss = "categorical_crossentropy",
optimizer = optimizer_rmsprop(),
metrics = c("accuracy")
)
history <- model %>% fit(
x_train, y_train,
epochs = 30, batch_size = 128,
validation_split = 0.2
)
plot(history)
model %>% evaluate(x_test, y_test,verbose = 0)
model %>% predict_classes(x_test)
reticulate::py_config()
reticulate::py_config()
library(reticulate)
use_python("C:/Users/STEP/anaconda3/python.exe")
py_config()
py_discover_config()
conda_list()
myenvs = conda_list()
envname = myenvs$name[2]
envname
use_condaenv(envname,required = T)
library(reticulate)
myenvs=conda_list()
envname=myenvs$name[2]
use_condaenv(envname, required = TRUE)
py_config()
library(reticulate)
py_config()
repl_python()
import pandas
import parso
exit
py_config()
librar
library(reticulate)
py_config()
n
py_config()
repl_python()
import pandas
exit
myenvs=conda_list()
envname=myenvs$name[2]
use_condaenv(envname, required = TRUE)
myenvs
library(reticulate)
myenvs=conda_list()
myenvs
use_python("C:/Users/STEP/anaconda3/python.exe")
myenvs=conda_list()
myenvs
library(keras)
x = dataset_imdb()
x = x$train
x = x$x
x
install.packages(c("generics", "testthat"))
library(keras)
## 1.1 Load in data
imdb = dataset_imdb(num_words = 10000)
str(imdb)
c(c(train_data, train_labels), c(test_data, test_labels)) %<-% imdb
## 1.2 Encoding the integer sequences into a binary matrix
vectorize_sequences = function(sequences, dimension = 10000) {
results = matrix(0, nrow = length(sequences), ncol = dimension)
for (i in 1:length(sequences)){
results[i, sequences[[i]]] = 1
}
results
}
x_train = vectorize_sequences(train_data)
x_test = vectorize_sequences(test_data)
y_train = as.numeric(train_labels)
y_test = as.numeric(test_labels)
head(x_train)
install.packages(c("colorspace", "rstudioapi", "waldo", "xlsx"))
install.packages(c("lubridate", "xlsx"))
install.packages("xlsx")
install.packages("vitae")
install.packages(c("backports", "data.table", "DescTools", "htmlwidgets", "jsonlite", "usethis"))
install.packages("parallelly")
install.packages(c("BH", "cpp11", "crosstalk", "DBI", "diffobj", "dplyr", "expm", "fansi", "git2r", "hdrcde", "hms", "htmltools", "httpuv", "Rcpp", "rlang", "sp", "tibble", "withr", "xfun"))
install.packages(c("brio", "htmltools", "plotrix", "tinytex"))
install.packages(c("ActCR", "broom", "cli", "cpp11", "crayon", "fastmap", "forcats", "furrr", "gert", "knitr", "matrixStats", "memoise", "pracma", "rappdirs", "reprex", "shiny", "tibble", "vitae", "withr"))
# 0. Packages to be used --------------------------------------------------
library(rnhanesdata)
library(dplyr)
library(accelerometry)
library(ActFrag)
rm(list = ls())
# 1. Actigraphy Data from Package------------------------------------------------------
data("PAXINTEN_C")
data("Flags_C")
## re-code activity counts which are considered "non-wear" to be 0
## this doesn't impact much data, most estimated non-wear times correspond to 0 counts anyway
PAXINTEN_C[,paste0("MIN",1:1440)] <- PAXINTEN_C[,paste0("MIN",1:1440)]*Flags_C[,paste0("MIN",1:1440)]
act = PAXINTEN_C
flag = Flags_C
num_to_week = function(x){
factor(ifelse(x == 1, "Sun", ifelse(x == 2, "Mon", ifelse(x == 3, "Tue",
ifelse(x == 4, "Wed", ifelse(x == 5, "Thu",
ifelse(x == 6, "Fri", ifelse(x == 7, "Sat",NA))))))),
levels = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"))
}
act$WEEKDAY = num_to_week(act$WEEKDAY)
flag$WEEKDAY = num_to_week(flag$WEEKDAY)
act$Seq = rep(x = c(1:7),length(unique(act$SEQN)))
flag$Seq = rep(x = c(1:7),length(unique(flag$SEQN)))
act$SDDSRVYR = NULL
flag$SDDSRVYR = NULL
act = act[,c(1,2,3,4,1445,5:1444)]
flag = flag[,c(1,2,3,4,1445,5:1444)]
# subject days with more than 10 hours of wearing
nonwear_flag10 = rowSums(flag[, paste('MIN', 1:1440, sep='')], na.rm = TRUE) <600
act10 = act[!(nonwear_flag10 | act$PAXCAL==2 | act$PAXCAL==9 | act$PAXSTAT==2),]
wear10 = flag[!(nonwear_flag10 | flag$PAXCAL==2 | flag$PAXCAL==9 | flag$PAXSTAT==2),]
act10$PAXCAL = act10$PAXSTAT = wear10$PAXCAL = wear10$PAXSTAT = NULL
act10 = na.omit(act10)
wear10 = na.omit(wear10)
rm(list = setdiff(ls(),c("act10","wear10")))
### Data Flow for Perry's JAMA NO Paper
# 0. Packages to be used --------------------------------------------------
library(rnhanesdata)
library(dplyr)
library(accelerometry)
library(ActFrag)
rm(list = ls())
# 1. Actigraphy Data from Package------------------------------------------------------
data("PAXINTEN_C")
data("Flags_C")
## re-code activity counts which are considered "non-wear" to be 0
## this doesn't impact much data, most estimated non-wear times correspond to 0 counts anyway
PAXINTEN_C[,paste0("MIN",1:1440)] <- PAXINTEN_C[,paste0("MIN",1:1440)]*Flags_C[,paste0("MIN",1:1440)]
act = PAXINTEN_C
flag = Flags_C
num_to_week = function(x){
factor(ifelse(x == 1, "Sun", ifelse(x == 2, "Mon", ifelse(x == 3, "Tue",
ifelse(x == 4, "Wed", ifelse(x == 5, "Thu",
ifelse(x == 6, "Fri", ifelse(x == 7, "Sat",NA))))))),
levels = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"))
}
act$WEEKDAY = num_to_week(act$WEEKDAY)
flag$WEEKDAY = num_to_week(flag$WEEKDAY)
act$Seq = rep(x = c(1:7),length(unique(act$SEQN)))
flag$Seq = rep(x = c(1:7),length(unique(flag$SEQN)))
act$SDDSRVYR = NULL
flag$SDDSRVYR = NULL
act = act[,c(1,2,3,4,1445,5:1444)]
flag = flag[,c(1,2,3,4,1445,5:1444)]
# subject days with more than 10 hours of wearing
nonwear_flag10 = rowSums(flag[, paste('MIN', 1:1440, sep='')], na.rm = TRUE) <600
act10 = act[!(nonwear_flag10 | act$PAXCAL==2 | act$PAXCAL==9 | act$PAXSTAT==2),]
wear10 = flag[!(nonwear_flag10 | flag$PAXCAL==2 | flag$PAXCAL==9 | flag$PAXSTAT==2),]
act10$PAXCAL = act10$PAXSTAT = wear10$PAXCAL = wear10$PAXSTAT = NULL
act10 = na.omit(act10)
wear10 = na.omit(wear10)
rm(list = setdiff(ls(),c("act10","wear10")))
getwd()
perry = readr::read_csv("C:/Users/STEP/Dropbox/Junrui Di/Other papers/PA_act_Junrui_2020-07-02.csv")
perry = readr::read_csv("C:/Users/STEP/Dropbox/Junrui Di/Other papers/NHANES Perry/PA_act_Junrui_2020-07-02.csv")
act10 = act10 %>% filter(SEQN %in% perry$SEQN)
wear10 = wear10 %>% filter(SEQN %in% perry$SEQN)
head(act10[,1:10])
head(act10[,1399 :1443])
table(act10$SEQN)
table(table(act10$SEQN))
### Data Flow for Perry's JAMA NO Paper
# 0. Packages to be used --------------------------------------------------
library(rnhanesdata)
library(dplyr)
library(accelerometry)
library(ActFrag)
rm(list = ls())
# 1. Actigraphy Data from Package------------------------------------------------------
data("PAXINTEN_C")
data("Flags_C")
## re-code activity counts which are considered "non-wear" to be 0
## this doesn't impact much data, most estimated non-wear times correspond to 0 counts anyway
PAXINTEN_C[,paste0("MIN",1:1440)] <- PAXINTEN_C[,paste0("MIN",1:1440)]*Flags_C[,paste0("MIN",1:1440)]
act = PAXINTEN_C
flag = Flags_C
num_to_week = function(x){
factor(ifelse(x == 1, "Sun", ifelse(x == 2, "Mon", ifelse(x == 3, "Tue",
ifelse(x == 4, "Wed", ifelse(x == 5, "Thu",
ifelse(x == 6, "Fri", ifelse(x == 7, "Sat",NA))))))),
levels = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"))
}
act$WEEKDAY = num_to_week(act$WEEKDAY)
flag$WEEKDAY = num_to_week(flag$WEEKDAY)
act$Seq = rep(x = c(1:7),length(unique(act$SEQN)))
flag$Seq = rep(x = c(1:7),length(unique(flag$SEQN)))
act$SDDSRVYR = NULL
flag$SDDSRVYR = NULL
act = act[,c(1,2,3,4,1445,5:1444)]
flag = flag[,c(1,2,3,4,1445,5:1444)]
# subject days with more than 10 hours of wearing
nonwear_flag10 = rowSums(flag[, paste('MIN', 1:1440, sep='')], na.rm = TRUE) <600
act10 = act[!(nonwear_flag10 | act$PAXCAL==2 | act$PAXCAL==9 | act$PAXSTAT==2),]
wear10 = flag[!(nonwear_flag10 | flag$PAXCAL==2 | flag$PAXCAL==9 | flag$PAXSTAT==2),]
act10$PAXCAL = act10$PAXSTAT = wear10$PAXCAL = wear10$PAXSTAT = NULL
act10 = na.omit(act10)
wear10 = na.omit(wear10)
rm(list = setdiff(ls(),c("act10","wear10")))
table(table(act10$SEQN))
ID_less_than3 = as.numeric(names(table(act10$SEQN) < 3))
table(act10$SEQN) < 3
which(table(act10$SEQN) < 3)
ID_less_than3 = as.numeric(names(which(table(act10$SEQN) < 3)))
402 + 389
act10 = act10  %>% filter(!SEQN %in% ID_less_than3)
402 + 389 * 2
length(unique(act10$SEQN))
data("Covariate_C")
head(data[,1:10])
head(Covariate_C[,1:10])
232/12
x1 = floor(Covariate_C$RIDAGEMN/12)
x2 = Covariate_C$RIDAGEYR
plot(x1,x2)
identical(x1,x2)
whihc(x1 != x2)
which(x1 != x2)
x1 - x2
table(x1,x2)
table(x1-x2)
sum(is.na(x1))
223 + 9899
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEYR >= 60 & Covariate_C$RIDAGEYR <= 69)]
act10_final = act10 %>% filter(SEQN %in% Id_60to69)
length(unique(act10_final$SEQN))
### Data Flow for Perry's JAMA NO Paper
# 0. Packages to be used --------------------------------------------------
library(rnhanesdata)
library(dplyr)
library(accelerometry)
library(ActFrag)
rm(list = ls())
# 1. Actigraphy Data from Package------------------------------------------------------
data("PAXINTEN_C")
data("Flags_C")
## re-code activity counts which are considered "non-wear" to be 0
## this doesn't impact much data, most estimated non-wear times correspond to 0 counts anyway
PAXINTEN_C[,paste0("MIN",1:1440)] <- PAXINTEN_C[,paste0("MIN",1:1440)]*Flags_C[,paste0("MIN",1:1440)]
act = PAXINTEN_C
flag = Flags_C
num_to_week = function(x){
factor(ifelse(x == 1, "Sun", ifelse(x == 2, "Mon", ifelse(x == 3, "Tue",
ifelse(x == 4, "Wed", ifelse(x == 5, "Thu",
ifelse(x == 6, "Fri", ifelse(x == 7, "Sat",NA))))))),
levels = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"))
}
act$WEEKDAY = num_to_week(act$WEEKDAY)
flag$WEEKDAY = num_to_week(flag$WEEKDAY)
act$Seq = rep(x = c(1:7),length(unique(act$SEQN)))
flag$Seq = rep(x = c(1:7),length(unique(flag$SEQN)))
act$SDDSRVYR = NULL
flag$SDDSRVYR = NULL
act = act[,c(1,2,3,4,1445,5:1444)]
flag = flag[,c(1,2,3,4,1445,5:1444)]
# subject days with more than 10 hours of wearing
nonwear_flag10 = rowSums(flag[, paste('MIN', 1:1440, sep='')], na.rm = TRUE) <600
act10 = act[!(nonwear_flag10 | act$PAXCAL==2 | act$PAXCAL==9 | act$PAXSTAT==2),]
wear10 = flag[!(nonwear_flag10 | flag$PAXCAL==2 | flag$PAXCAL==9 | flag$PAXSTAT==2),]
act10$PAXCAL = act10$PAXSTAT = wear10$PAXCAL = wear10$PAXSTAT = NULL
act10 = na.omit(act10)
wear10 = na.omit(wear10)
rm(list = setdiff(ls(),c("act10","wear10")))
# 2. Sample Size consideration --------------------------------------------
## subjects who had < 3 days
ID_less_than3 = as.numeric(names(which(table(act10$SEQN) < 3)))
act10 = act10  %>% filter(!SEQN %in% ID_less_than3)
# number of subjects who had valid data (defined as all flags checked, and having 3 or more valid days )
length(unique(act10$SEQN))
data("Covariate_C")
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEYR >= 60 & Covariate_C$RIDAGEYR <= 69)]
act10_final = act10 %>% filter(SEQN %in% Id_60to69)
length(unique(act10_final$SEQN))
# 0. Packages to be used --------------------------------------------------
library(rnhanesdata)
library(dplyr)
library(accelerometry)
library(ActFrag)
rm(list = ls())
# 1. Actigraphy Data from Package------------------------------------------------------
data("PAXINTEN_C")
data("PAXINTEN_D")
data("Flags_C")
data("Flags_D")
## re-code activity counts which are considered "non-wear" to be 0
## this doesn't impact much data, most estimated non-wear times correspond to 0 counts anyway
PAXINTEN_C[,paste0("MIN",1:1440)] <- PAXINTEN_C[,paste0("MIN",1:1440)]*Flags_C[,paste0("MIN",1:1440)]
PAXINTEN_D[,paste0("MIN",1:1440)] <- PAXINTEN_D[,paste0("MIN",1:1440)]*Flags_D[,paste0("MIN",1:1440)]
act = rbind(PAXINTEN_C,PAXINTEN_D)
flag = rbind(Flags_C, Flags_D)
num_to_week = function(x){
factor(ifelse(x == 1, "Sun", ifelse(x == 2, "Mon", ifelse(x == 3, "Tue",
ifelse(x == 4, "Wed", ifelse(x == 5, "Thu",
ifelse(x == 6, "Fri", ifelse(x == 7, "Sat",NA))))))),
levels = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"))
}
act$WEEKDAY = num_to_week(act$WEEKDAY)
flag$WEEKDAY = num_to_week(flag$WEEKDAY)
act$Seq = rep(x = c(1:7),length(unique(act$SEQN)))
flag$Seq = rep(x = c(1:7),length(unique(flag$SEQN)))
act$SDDSRVYR = NULL
flag$SDDSRVYR = NULL
act = act[,c(1,2,3,4,1445,5:1444)]
flag = flag[,c(1,2,3,4,1445,5:1444)]
# subject days with more than 10 hours of wearing
nonwear_flag10 = rowSums(flag[, paste('MIN', 1:1440, sep='')], na.rm = TRUE) <600
act10 = act[!(nonwear_flag10 | act$PAXCAL==2 | act$PAXCAL==9 | act$PAXSTAT==2),]
wear10 = flag[!(nonwear_flag10 | flag$PAXCAL==2 | flag$PAXCAL==9 | flag$PAXSTAT==2),]
act10$PAXCAL = act10$PAXSTAT = wear10$PAXCAL = wear10$PAXSTAT = NULL
########################################################################
## This is to correct the period where there is count to nonwear NA/0 ##
########################################################################
act10 = na.omit(act10)
wear10 = na.omit(wear10)
rm(list = setdiff(ls(),c("act10","wear10")))
perry = readr::read_csv("~/Desktop/NHANES Check/PA_act_Junrui_2020-07-02.csv")
act10 = act10 %>% filter(SEQN %in% perry$SEQN)
wear10 = wear10 %>% filter(SEQN %in% perry$SEQN)
perry = readr::read_csv("C:/Users/STEP/Dropbox/Junrui Di/Other papers/NHANES Perry/PA_act_Junrui_2020-07-02.csv")
act10 = act10 %>% filter(SEQN %in% perry$SEQN)
wear10 = wear10 %>% filter(SEQN %in% perry$SEQN)
View(wear10)
daily_wear_time = tibble(SEQN = act10$SEQN, WearTime = rowSums(wear10[,-c(1:3)]))
View(daily_wear_time)
View(daily_wear_time)
daily_wear_time_summary = daily_wear_time %>% summarise(Number_of_Days = n(), Ave_WearTime_Across_Day = mean(WearTime))
View(daily_wear_time_summary)
daily_wear_time_summary = daily_wear_time %>% group_by(SEQN) %>% summarise(Number_of_Days = n(), Ave_WearTime_Across_Day = mean(WearTime))
View(daily_wear_time_summary)
write.csv(daily_wear_time_summary, file = "C:/Users/STEP/Dropbox/Junrui Di/Other papers/NHANES Perry/WearTime_summary.csv",row.names = F)
12 * 60
12 * 70
### Data Flow for Perry's JAMA NO Paper
# 0. Packages to be used --------------------------------------------------
library(rnhanesdata)
library(dplyr)
library(accelerometry)
library(ActFrag)
rm(list = ls())
# 1. Actigraphy Data from Package------------------------------------------------------
data("PAXINTEN_C")
data("Flags_C")
## re-code activity counts which are considered "non-wear" to be 0
## this doesn't impact much data, most estimated non-wear times correspond to 0 counts anyway
PAXINTEN_C[,paste0("MIN",1:1440)] <- PAXINTEN_C[,paste0("MIN",1:1440)]*Flags_C[,paste0("MIN",1:1440)]
act = PAXINTEN_C
flag = Flags_C
num_to_week = function(x){
factor(ifelse(x == 1, "Sun", ifelse(x == 2, "Mon", ifelse(x == 3, "Tue",
ifelse(x == 4, "Wed", ifelse(x == 5, "Thu",
ifelse(x == 6, "Fri", ifelse(x == 7, "Sat",NA))))))),
levels = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"))
}
act$WEEKDAY = num_to_week(act$WEEKDAY)
flag$WEEKDAY = num_to_week(flag$WEEKDAY)
act$Seq = rep(x = c(1:7),length(unique(act$SEQN)))
flag$Seq = rep(x = c(1:7),length(unique(flag$SEQN)))
act$SDDSRVYR = NULL
flag$SDDSRVYR = NULL
act = act[,c(1,2,3,4,1445,5:1444)]
flag = flag[,c(1,2,3,4,1445,5:1444)]
# subject days with more than 10 hours of wearing
nonwear_flag10 = rowSums(flag[, paste('MIN', 1:1440, sep='')], na.rm = TRUE) <600
act10 = act[!(nonwear_flag10 | act$PAXCAL==2 | act$PAXCAL==9 | act$PAXSTAT==2),]
wear10 = flag[!(nonwear_flag10 | flag$PAXCAL==2 | flag$PAXCAL==9 | flag$PAXSTAT==2),]
act10$PAXCAL = act10$PAXSTAT = wear10$PAXCAL = wear10$PAXSTAT = NULL
act10 = na.omit(act10)
wear10 = na.omit(wear10)
rm(list = setdiff(ls(),c("act10","wear10")))
# 2. Sample Size consideration --------------------------------------------
## subjects who had < 3 days
ID_less_than3 = as.numeric(names(which(table(act10$SEQN) < 3)))
act10 = act10  %>% filter(!SEQN %in% ID_less_than3)
# number of subjects who had valid data (defined as all flags checked, and having 3 or more valid days )
length(unique(act10$SEQN))
12 * 60
12 * 80
12 * 70
### Data Flow for Perry's JAMA NO Paper
# 0. Packages to be used --------------------------------------------------
library(rnhanesdata)
library(dplyr)
library(accelerometry)
library(ActFrag)
rm(list = ls())
# 1. Actigraphy Data from Package------------------------------------------------------
data("PAXINTEN_C")
data("Flags_C")
## re-code activity counts which are considered "non-wear" to be 0
## this doesn't impact much data, most estimated non-wear times correspond to 0 counts anyway
PAXINTEN_C[,paste0("MIN",1:1440)] <- PAXINTEN_C[,paste0("MIN",1:1440)]*Flags_C[,paste0("MIN",1:1440)]
act = PAXINTEN_C
flag = Flags_C
num_to_week = function(x){
factor(ifelse(x == 1, "Sun", ifelse(x == 2, "Mon", ifelse(x == 3, "Tue",
ifelse(x == 4, "Wed", ifelse(x == 5, "Thu",
ifelse(x == 6, "Fri", ifelse(x == 7, "Sat",NA))))))),
levels = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"))
}
act$WEEKDAY = num_to_week(act$WEEKDAY)
flag$WEEKDAY = num_to_week(flag$WEEKDAY)
act$Seq = rep(x = c(1:7),length(unique(act$SEQN)))
flag$Seq = rep(x = c(1:7),length(unique(flag$SEQN)))
act$SDDSRVYR = NULL
flag$SDDSRVYR = NULL
act = act[,c(1,2,3,4,1445,5:1444)]
flag = flag[,c(1,2,3,4,1445,5:1444)]
# subject days with more than 10 hours of wearing
nonwear_flag10 = rowSums(flag[, paste('MIN', 1:1440, sep='')], na.rm = TRUE) <600
act10 = act[!(nonwear_flag10 | act$PAXCAL==2 | act$PAXCAL==9 | act$PAXSTAT==2),]
wear10 = flag[!(nonwear_flag10 | flag$PAXCAL==2 | flag$PAXCAL==9 | flag$PAXSTAT==2),]
act10$PAXCAL = act10$PAXSTAT = wear10$PAXCAL = wear10$PAXSTAT = NULL
act10 = na.omit(act10)
wear10 = na.omit(wear10)
rm(list = setdiff(ls(),c("act10","wear10")))
# 2. Sample Size consideration --------------------------------------------
## subjects who had < 3 days
ID_less_than3 = as.numeric(names(which(table(act10$SEQN) < 3)))
act10 = act10  %>% filter(!SEQN %in% ID_less_than3)
# number of subjects who had valid data (defined as all flags checked, and having 3 or more valid days )
length(unique(act10$SEQN))
data("Covariate_C")
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEYR >= 60 & Covariate_C$RIDAGEYR <= 69)]
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEEX >= 70 & Covariate_C$RIDAGEEX <= 840)]
act10_final = act10 %>% filter(SEQN %in% Id_60to69)
length(unique(act10_final$SEQN))
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEYR >= 60 & Covariate_C$RIDAGEYR <= 69)]
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEEX >= 70 & Covariate_C$RIDAGEEX <= 840)]
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEEX >= 720 & Covariate_C$RIDAGEEX <= 840)]
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEYR >= 60 & Covariate_C$RIDAGEYR <= 69)]
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEEX >= 720 & Covariate_C$RIDAGEEX <= 840)]
act10_final = act10 %>% filter(SEQN %in% Id_60to69)
length(unique(act10_final$SEQN))
### Data Flow for Perry's JAMA NO Paper
# 0. Packages to be used --------------------------------------------------
library(rnhanesdata)
library(dplyr)
library(accelerometry)
library(ActFrag)
rm(list = ls())
# 1. Actigraphy Data from Package------------------------------------------------------
data("PAXINTEN_C")
data("Flags_C")
## re-code activity counts which are considered "non-wear" to be 0
## this doesn't impact much data, most estimated non-wear times correspond to 0 counts anyway
PAXINTEN_C[,paste0("MIN",1:1440)] <- PAXINTEN_C[,paste0("MIN",1:1440)]*Flags_C[,paste0("MIN",1:1440)]
act = PAXINTEN_C
flag = Flags_C
num_to_week = function(x){
factor(ifelse(x == 1, "Sun", ifelse(x == 2, "Mon", ifelse(x == 3, "Tue",
ifelse(x == 4, "Wed", ifelse(x == 5, "Thu",
ifelse(x == 6, "Fri", ifelse(x == 7, "Sat",NA))))))),
levels = c("Sun","Mon","Tue","Wed","Thu","Fri","Sat"))
}
act$WEEKDAY = num_to_week(act$WEEKDAY)
flag$WEEKDAY = num_to_week(flag$WEEKDAY)
act$Seq = rep(x = c(1:7),length(unique(act$SEQN)))
flag$Seq = rep(x = c(1:7),length(unique(flag$SEQN)))
act$SDDSRVYR = NULL
flag$SDDSRVYR = NULL
act = act[,c(1,2,3,4,1445,5:1444)]
flag = flag[,c(1,2,3,4,1445,5:1444)]
# subject days with more than 10 hours of wearing
nonwear_flag10 = rowSums(flag[, paste('MIN', 1:1440, sep='')], na.rm = TRUE) <600
act10 = act[!(nonwear_flag10 | act$PAXCAL==2 | act$PAXCAL==9 | act$PAXSTAT==2),]
wear10 = flag[!(nonwear_flag10 | flag$PAXCAL==2 | flag$PAXCAL==9 | flag$PAXSTAT==2),]
act10$PAXCAL = act10$PAXSTAT = wear10$PAXCAL = wear10$PAXSTAT = NULL
act10 = na.omit(act10)
wear10 = na.omit(wear10)
rm(list = setdiff(ls(),c("act10","wear10")))
# 2. Sample Size consideration --------------------------------------------
## subjects who had < 3 days
ID_less_than3 = as.numeric(names(which(table(act10$SEQN) < 3)))
act10 = act10  %>% filter(!SEQN %in% ID_less_than3)
# number of subjects who had valid data (defined as all flags checked, and having 3 or more valid days )
length(unique(act10$SEQN))
data("Covariate_C")
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEYR >= 60 & Covariate_C$RIDAGEYR <= 69)]
Id_60to69 = Covariate_C$SEQN[which(Covariate_C$RIDAGEEX >= 720 & Covariate_C$RIDAGEEX <= 840)]
act10_final = act10 %>% filter(SEQN %in% Id_60to69)
length(unique(act10_final$SEQN))
install.packages(c("cachem", "crayon", "dbplyr", "DescTools", "dplyr", "ks", "promises", "systemfonts", "textshaping", "usethis", "waldo", "xfun"))
install.packages(c("cachem", "DiceDesign", "gert", "mime", "testthat"))
install.packages(c("broom", "data.table", "lifecycle", "pillar", "ragg", "rmarkdown", "rsample", "textshaping", "vitae"))
install.packages(c("cli", "farver", "Hmisc", "lubridate", "pkgload", "ps", "ragg", "tfruns", "tibble", "tune"))
setwd("C:/Users/STEP/Dropbox/web/junruidi.github.io/")
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
#render your sweet site.
rmarkdown::render_site()
